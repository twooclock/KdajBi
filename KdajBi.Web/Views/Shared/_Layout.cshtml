@using Microsoft.AspNetCore.Identity
@using KdajBi.Core.Models;
@using KdajBi.Web;
@using KdajBi.Web.ViewModels;
@model _BaseViewModel

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@{
    bool isAdmin = User.IsInRole("Admin");
    bool isSuper = User.IsInRole("Super");
    bool isUser = (isAdmin==false && isSuper==false);
    bool isNadzornik = User.HasClaim("Nadzornik", bool.TrueString);
    int myCompanyId = int.Parse(User.FindFirst("CompanyId").Value);

}
<!DOCTYPE html>
<!--
This is a starter template page. Use this page to start your new project from
scratch. This page gets rid of all links and provides the needed markup only.
-->
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="x-ua-compatible" content="ie=edge">

    <link rel="icon" href="~/appimages/favicon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="~/appimages/apple-touch-icon.png"/>
    <link rel="manifest" href="~/manifest.json" />

    <title>KdajBi-@ViewData["Title"]</title>

    <!-- Font Awesome Icons -->
    <link rel="stylesheet" href="~/plugins/fontawesome-free/css/all.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="~/css/adminlte.min.css">
    <!-- Google Font: Source Sans Pro -->
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet">
    <link rel="stylesheet" href="~/css/_all-skins.min.css" />
    @RenderSection("styles", required: false)
    <link rel="stylesheet" href="~/css/site.css" />
    <link href="~/plugins/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <link href="~/plugins/toastr/toastr.min.css" rel="stylesheet" />
    <style>
        .shepherd-title{ font-weight:700;}
    </style>
</head>
<body class="skin-blue sidebar-mini layout-fixed layout-navbar-fixed layout-footer-fixed text-sm">
    <div class="wrapper">
        <header class="main-header">

            <nav class="main-header navbar navbar-expand navbar-white navbar-light">

                <ul class="navbar-nav">
                    <li id="pushmenu" class="nav-item">
                        <a class="nav-link" data-widget="pushmenu" href="#" role="button" data-enable-remember="true"><i class="fas fa-bars"></i></a>
                    </li>

                </ul>
                <!-- Navbar
                  <form class="form-inline ml-3">
                    <div class="input-group input-group-sm">
                      <input class="form-control form-control-navbar" type="search" placeholder="Search" aria-label="Search">
                      <div class="input-group-append">
                        <button class="btn btn-navbar" type="submit">
                          <i class="fas fa-search"></i>
                        </button>
                      </div>
                    </div>
                  </form>

                Right navbar links -->

                @await Component.InvokeAsync("LocationsCombo", new { CompanyId = int.Parse(User.FindFirst("CompanyId").Value) })

                <ul class="navbar-nav ml-auto">
                    <li class="liContact" style="display:flex; flex-direction:column;justify-content: center;align-items:center;margin-right:0.5rem;">
                        <a class="" style="display:flex; flex-direction:column;justify-content: center;align-items:center" href="!#" role="button" data-toggle="modal" data-target="#myContactModal">
                            <i class="far fa-envelope user-image" style="font-size: 1.7rem; color: #fff;"></i>
                        </a>
                    </li>
                    <li class="" style="display:flex; flex-direction:column;justify-content: center;align-items:center;margin-right:0.5rem;">
                        <a class="" style="cursor:pointer;display:flex; flex-direction:column;justify-content: center;align-items:center" onclick="ShowPageTour()" role="button">
                            <i class="far fa-question-circle user-image" style="font-size: 2.1rem; color: #fff;"></i>
                        </a>
                    </li>
                    <li class=" dropdown user user-menu" style="display:flex; flex-direction:column;justify-content: center;align-items:center">
                        <a href="#" class="" data-toggle="dropdown" aria-expanded="false" style="display:flex; flex-direction:column;justify-content: center;align-items:center;margin-right: -0.6rem;">
                            <img src="@User.FindFirst("picture").Value" class="user-image" alt="" style="margin-top:0;">
                            <span class="hidden-xs"></span>
                            @if (isNadzornik==true)
                            {
                                <span class="right badge badge-danger" style="position: absolute;top: 22px;">Nadzornik</span>
                            }
                        </a>
                        <ul class="dropdown-menu">
                            <!-- User image -->
                            <a class="dropdown-item" href="#">@UserManager.GetUserName(User)</a>
                            <!-- Menu Body -->
                            
                            <!-- /.row -->
                            <!-- Menu Footer-->
                            @if (isAdmin == true)
                            {
                                <div class="dropdown-divider"></div>
                                @if (isNadzornik == true)
                                {
                                    <a class="dropdown-item" href="#" onclick="flipNadzornik()">
                                        Zakleni
                                    </a>
                                }
                                else
                                {
                                    <a class="dropdown-item" href="#" onclick="flipNadzornik()">
                                        Odkleni
                                    </a>
                                }
                            }
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="~/Account/Logout">Odjava</a>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a id="toggleRightSidebar" class="nav-link" data-widget="control-sidebar" data-slide="true" href="#" role="button" style="width: 1rem;">
                            <i class="fas fa-chevron-left user-image" ></i>
                            <span id="RightSidebarItems" class="badge badge-danger navbar-badge" style="top: 3px;"></span>
                        </a>
                    </li>
                </ul>
            </nav>
            <!-- /.navbar -->

        </header>
        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4">
            <!-- Brand Logo -->
            <a href="~/Home/Index" class="brand-link">
                
                <span class="brand-text font-weight-light">
                <img src="~/img/Logo.png" alt="KdajBi Logo" class="brand-image" style="opacity: .8">
                </span>
            </a>

            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Sidebar user panel (optional)
                <div class="user-panel mt-3 pb-3 mb-3 d-flex">
                    <div class="image">
                        <img src="img/user2-160x160.jpg" class="img-circle elevation-2" alt="User Image">
                    </div>
                    <div class="info">
                        <a href="#" class="d-block">Alexander Pierce</a>
                    </div>
                </div>
                    -->
                <!-- Sidebar Menu -->
                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                        
                        @if (isSuper==true)
                        {
                            <li class="nav-item has-treeview menu-open">
                                <a href="#" class="nav-link">
                                    <i class="nav-icon fas fa-table"></i>
                                    <p>
                                        Master data
                                        <i class="fas fa-chevron-down right"></i>
                                    </p>
                                </a>

                                <ul class="nav nav-treeview" style="display: block;">
                                    <li class="nav-item">
                                        <a href="@Url.Content("~/companies")" class="nav-link">
                                            <i class="far nav-icon"></i>
                                            <p>Companies</p>
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a href="@Url.Content("~/users")" class="nav-link">
                                            <i class="far nav-icon"></i>
                                            <p>Users</p>
                                        </a>
                                    </li>

                                </ul>
                            </li>
                        }
                        @if ( isSuper == true || isNadzornik == true)
                        {
                            <li id="smCompany" class="nav-item ">
                                <a href="@Url.Content("~/companies/mycompany")" class="nav-link ">
                                    <i class="nav-icon fa fa-university"></i>
                                    <p>
                                        Podjetje
                                    </p>
                                </a>
                            </li>
                        }
                        @if (isSuper == true || isNadzornik == true)
                        {
                            @await Component.InvokeAsync("LocationsMenu", new { CompanyId = myCompanyId });
                        }
                        @if (Model.UserUIShow.Contains("Appointments") || isSuper == true || isNadzornik == true)
                        { 
                            <li id="smAppointments" class="nav-item ">
                                <a href="@Url.Content("~/appointments/Index")" class="nav-link ">
                                    <i class="nav-icon fa fa-calendar-alt"></i>
                                    <p>
                                        Naročila
                                    </p>
                                </a>
                            </li>
                        }
                        <div class="smClients nav-sidebar">
                        @if (Model.UserUIShow.Contains("ClientsList") || isSuper == true || isNadzornik == true)
                        {
                            <li class="nav-item ">
                                <a href="@Url.Content("~/clients/")" class="nav-link ">
                                    <i class="nav-icon fas fa-address-card"></i>
                                    <p>
                                        Stranke (seznam)
                                    </p>
                                </a>
                            </li>
                        }
                        @if (Model.UserUIShow.Contains("Clients") || isSuper == true || isNadzornik == true)
                        {
                            <li class="nav-item ">
                                <a href="@Url.Content("~/clients/Index3/")" class="nav-link ">
                                    <i class="nav-icon fas fa-address-card"></i>
                                    <p>
                                        Stranke
                                    </p>
                                </a>
                            </li>
                        }
                        </div>
                        @if (Model.UserUIShow.Contains("SMSNotification") || Model.UserUIShow.Contains("SMSCampaigns") || isSuper == true || isNadzornik == true)
                        {
                            <li id="smClientNotification" class="nav-item has-treeview menu-open">
                                <a href="#" class="nav-link ">
                                    <i class="nav-icon fas fa-bullhorn"></i>
                                    <p>
                                        Obveščanje strank
                                    </p>
                                    <i class="fas fa-chevron-down right"></i>
                                </a>
                                <ul class="nav nav-treeview" style="display: block;">

                                    @if (Model.UserUIShow.Contains("SMSNotification") || isSuper == true || isNadzornik == true)
                                    {
                                        <li class="nav-item">
                                            <a href="@Url.Content("~/sms/Notification/")" class="nav-link">
                                                <i class="far nav-icon"></i>
                                                <p>Obvesti prek SMS</p>
                                            </a>
                                        </li>
                                    }
                                    @if (Model.UserUIShow.Contains("SMSCampaigns") || isSuper == true || isNadzornik == true)
                                    {
                                        <li class="nav-item">
                                            <a href="@Url.Content("~/sms/Campaigns")" class="nav-link">
                                                <i class="far nav-icon"></i>
                                                <p>Pregled poslanih SMS</p>
                                            </a>
                                        </li>
                                    }
                                    @if ( isSuper == true || isNadzornik == true)
                                    {
                                        <li class="nav-item">
                                            <a href="@Url.Content("~/sms/OrderSms")" class="nav-link">
                                                <i class="far nav-icon"></i>
                                                <p>Naročilo SMS</p>
                                            </a>
                                        </li>
                                    }

                                </ul>
                            </li>
                        } 
                    </ul>
                </nav>
                <!-- /.sidebar-menu -->
            </div>
            <!-- /.sidebar -->
        </aside>

        <div class="content-wrapper">
            @RenderBody()
        </div>
        <aside id="rightSideBar" class="control-sidebar control-sidebar-dark" style="margin-top: 46px">
            @await Component.InvokeAsync("BookingConfirmationList", new { CompanyId = myCompanyId })
            @await Component.InvokeAsync("PublicBookingList", new { CompanyId = myCompanyId })
            @await Component.InvokeAsync("AppMessagesList", new { CompanyId = myCompanyId })
        </aside>
        <footer class="main-footer" hidden>
            <div class="float-right d-none d-sm-inline">
                Anything you want
            </div>
            <strong>Copyright &copy; 2014-2019 <a href="https://adminlte.io">AdminLTE.io</a>.</strong> All rights reserved.
        </footer>
    </div>
    <!-- modal content-->
    <div id="myContactModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Pošljite nam sporočilo</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    <form id="dataform" class="dataform" name="dataform">
                        <textarea class="form-control" id="txtMessage" rows="5"></textarea>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="cmdSend" class="btn btn-primary" onclick="SendMail();"><i class="far fa-envelope"></i> Pošlji</button>
                </div>
            </div>
        </div>
    </div>
    <!-- /modal content-->
    <!-- REQUIRED SCRIPTS -->
    <!-- jQuery -->
    <script src="~/plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="~/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/js/adminlte.min.js"></script>

    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/plugins/toastr/toastr.min.js"></script>

    <script>
        

        $(document).ready(function () {
            $('#booking-confirmation .btn-danger').click(function () {
                var card = $(this).closest('.card');
                var id = card.attr('data-id');
                
                getAPIToken().then(
                    (result) => {
                        $.ajax({
                        url: apiURL + "/api/booking-confirmation/" + id,
                        type: 'DELETE',
                        headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                        success: function (data) {
                            card.remove();
                        }
                    });
                });
            });
            $('#booking-confirmation .btn-success').click(function () {
                var card = $(this).closest('.card');
                var id = card.attr('data-id');
                
                getAPIToken().then(
                    (result) => {
                        $.ajax({
                        url: apiURL + "/api/booking-confirmation/" + id,
                        type: 'PUT',
                        headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                        success: function (data) {
                            card.remove();
                        }
                    });
                });
            });
             $('#publicbooking-confirmation .btn-danger').click(function () {
                var card = $(this).closest('.card');
                var id = card.attr('data-id');
                
                getAPIToken().then(
                    (result) => {
                        $.ajax({
                        url: apiURL + "/api/publicbooking-confirmation/" + id,
                        type: 'DELETE',
                        headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                        success: function (data) {
                            card.remove();
                        }
                    });
                });
            });
            $('#publicbooking-confirmation .btn-success').click(function () {
                var card = $(this).closest('.card');
                var id = card.attr('data-id');
                
                getAPIToken().then(
                    (result) => {
                        $.ajax({
                        url: apiURL + "/api/publicbooking-confirmation/" + id,
                        type: 'PUT',
                        headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                        success: function (data) {
                            card.remove();
                        }
                    });
                });
            });
            $('#app-messages .btn-success').click(function () {
                var card = $(this).closest('.card');
                var id = card.attr('data-id');
                
                getAPIToken().then(
                    (result) => {
                        $.ajax({
                        url: apiURL + "/api/UserAppMessageRead/" + id,
                        type: 'PUT',
                        headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                        success: function (data) {
                            var par = card.parent();
                            card.remove();
                            if (par.children().length == 1) { par.remove(); }
                            ShowHideRightSlidebar();
                        }
                    });
                });
            });
            //show sidebar if it contains elements
            ShowHideRightSlidebar();
            
        });

        function ShowHideRightSlidebar() {
            if ($("#rightSideBar").children().length > 0)
            {
                $('#toggleRightSidebar').ControlSidebar('show');
                $("#RightSidebarItems").text($("#rightSideBar").children().length);
                $("#RightSidebarItems").show();
            }
            else
            {
                $('#toggleRightSidebar').ControlSidebar('collapse');
                $("#RightSidebarItems").hide();
            }
        }

        function showLocations() {
            window.location = "@Url.Content("~/location/")" + $('#cboLocations').val();
        }

        function flipNadzornik() {
            @if (isNadzornik==true)
            { <text>window.location = "@Url.Content("~/Account/flipNadzornik")";</text> }
            else
            {
            <text>
            Swal.fire({
            html: `<div class="form-group">
                Geslo:
                <p class="">
                    <input id="secret" class="form-control" type="password" placeholder="geslo">
                </p>
            </div>`,
            confirmButtonText: 'Potrdi',
            cancelButtonText: 'Prekliči',
            showCancelButton: true,
            preConfirm: function () {
                return new Promise((resolve, reject) => {
                    resolve($('#secret').val());
                });
            }
            }).then((data) => {
                if (data.isConfirmed) { window.location = "@Url.Content("~/Account/flipNadzornik/?secret=")"+data.value;  }
            });

            </text>
            }

        }

        function SendMail() {
            if (JSON.stringify($("#txtMessage").val().length > 0)) {
                document.getElementById("cmdSend").disabled = true;
                var companyID = $("#cboLocations").val();
                $.ajax({
                    type: "post",
                    data: JSON.stringify($("#txtMessage").val()),
                    url: "@Url.Action("SendMail","Account")/" + companyID,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result == "OK") { toastr.success("Sporočilo poslano! <br/>Dajte nam, prosim, nekaj časa za odgovor..."); }
                        else { toastr.error("Error sending message:" + " - " + result.d); }
                        CancelMessage();
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Error sending message:" + " - " + error);
                        document.getElementById("cmdSend").disabled = false;
                    }
                });
            }
        }

        function OpenMessage(p_text) {
            $("#txtMessage").val(p_text);
            $("#myContactModal").modal('show');
        }

        function CancelMessage() {
            $("#txtMessage").val('');
            document.getElementById("cmdSend").disabled = false;
            $("#myContactModal").modal('hide');
        }
        var gPageTour;
        function ShowPageTour() {
            if (typeof gPageTour === 'undefined') 
            { window.location.href = "@Url.Content("~/home/newusertour")"; }
            else { gPageTour.start(); }
        }
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>






