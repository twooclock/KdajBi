@using Newtonsoft.Json;
@using KdajBi.Web.ViewModels;
@inject KdajBi.Web.Services.IApiTokenProvider apiTP
@model vmBooking
@{
    Layout = "~/Views/Shared/_EmptyLayout.cshtml";
    ViewData["Title"] = "Naročilo";
}

@section styles{
    <link href="~/plugins/flatpickr/flatpickr.min.css" rel="stylesheet" />
    <link href="~/plugins/flatpickr/plugins/confirmDate/confirmDate.css" rel="stylesheet" />

    <style>
        .appointment { cursor: pointer; }
        .appointment.card:hover { background: #007bff22; }
    </style>
    @Html.Raw(@Model.PublicBoooking_CSS)
}


<!-- page content -->

<div class="card mt-5 card-book">
    <div class="card-body login-card-body card-body-book">
        <h1 class="mb-2">Izberite si prost termin</h1>
        <div class="row">
            <div class="col-12 col-md-6">
                <h3 class="loaction-name">@Html.Raw(@Model.token.Location.Name)</h3>
                <h6><i class="fas fa-home"></i>&nbsp;@Html.Raw(@Model.token.Location.Address)</h6>
                <h6><i class="far fa-clock"></i>&nbsp;@Html.Raw(@Model.token.Location.Timetable)</h6>
                <h6><i class="fas fa-phone"></i>&nbsp;<a href="tel:@Html.Raw(@Model.token.Location.Tel)">@Html.Raw(@Model.token.Location.Tel)</a></h6>
            </div>
            <div class="col-12 col-md-6" id="appointments">
                <div class="mb-2 align-center d-flex justify-content-between align-items-center">
                    <button type="button" class="btn btn-outline-primary" id="previous-day"><</button>
                    <button type="button" class="btn btn-outline-primary" id="selected-date"></button>
                    <button type="button" class="btn btn-outline-primary" id="next-day">></button>
                </div>
                <div id="no-appointments" class="card card-outline card-primary p-1" style="display: none">
                    <div class="card-body text-center">
                        <h4>Ni prostih terminov</h4>
                    </div>
                </div>
                <div id="appointments-loader" class="card card-outline card-primary p-1" style="display: none">
                    <div class="card-body text-center">
                        <div class="spinner-border" role="status">
                            <span class="sr-only">Nalagam...</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col" id="err" style="display: none">
                <div class="card-body text-center">
                        <h4>Neveljavna povezava! <br/>Ta povezava je bila že uporabljena. <br/>Za naročilo nas pokličite na <a href="#/" class="tel" >@Html.Raw(@Model.token.Location.Tel)</a> ali nam pišite. Hvala!</h4>
                    </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="select-appointment" tabindex="-1" aria-labelledby="select-appointment-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="select-appointment-label">Izbran termin</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="font-size: 18px">
                Ali ste prepričani, da se želite naročiti na termin <br /><b><span id="selected-appointment-date"></span> ob <span id="selected-appointment-time"></span></b>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="create-appointment" class="btn btn-primary">Naroči se</button>
            </div>
        </div>
    </div>
</div>

<!-- DatePick modal content-->
<div id="myDatePickModal" class="modal fade" data-keyboard="true" tabindex='-1' role="dialog">
    <div class="modal-dialog modal-dialog-centered" style="max-width: fit-content;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">skoči na datum</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body ui-front">
                <form>
                    <div class="form-group">
                        <input type="text" class="form-control" id="datepick" style="visibility: hidden" aria-describedby="emailHelp">
                    </div>
                </form>
            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>
<!-- /modal content-->
@section scripts{
    <script src="~/plugins/flatpickr/flatpickr.min.js"></script>
    <script src="~/plugins/flatpickr/plugins/confirmDate/confirmDate.js"></script>
    <script src="~/plugins/dayjs/dayjs.min.js"></script>
    <script src="~/plugins/dayjs/plugin/utc.js"></script>
    <script>dayjs.extend(window.dayjs_plugin_utc)</script>
    <script src="~/plugins/dayjs/plugin/localizedFormat.js"></script>
    <script>dayjs.extend(window.dayjs_plugin_localizedFormat);</script>
    <script src="~/plugins/dayjs/plugin/localeData.js"></script>
    <script>dayjs.extend(window.dayjs_plugin_localeData)</script>
    <script src="~/plugins/dayjs/plugin/customParseFormat.js"></script>
    <script>dayjs.extend(window.dayjs_plugin_customParseFormat)</script>
    <script src="~/plugins/AlloyFinger/alloy_finger.js"></script>

    <script type="text/javascript">
  var apiURL = "@Html.Raw(apiTP.Settings().BaseAddress)"

  var token = "@Html.Raw(@Model.token.Token)";
  var date = new Date();
        var pb_maxdays = @Html.Raw(@Model.PublicBoooking_MaxDays);

        function loadScript(src) {
            return new Promise(function (resolve, reject) {
                const s = document.createElement('script');
                let r = false;
                s.type = 'text/javascript';
                s.src = src;
                s.async = true;
                s.onerror = function (err) {
                    reject(err, s);
                };
                s.onload = s.onreadystatechange = function () {
                    // console.log(this.readyState); // uncomment this line to see which ready states are called.
                    if (!r && (!this.readyState || this.readyState == 'complete')) {
                        r = true;
                        resolve();
                    }
                };
                const t = document.getElementsByTagName('script')[0];
                t.parentElement.insertBefore(s, t);
            });
        }

    $(document).ready(function () {

        loadScript("/plugins/dayjs/locale/" + navigator.language.slice(0, 2) + ".js")
            .then(async function () {

                loadScript("/plugins/flatpickr/l10n/" + navigator.language.slice(0, 2) + ".js")
                    .then(function () {

                        dp = $("#datepick").flatpickr({
                            dateFormat: "d.m.Y",
                            locale: dayjs.locale(),
                            defaultDate: new Date(),
                            minDate: "today",
                            @if (@Model.PublicBoooking_MaxDays > 0)
                            {
                                @Html.Raw("maxDate: new Date().fp_incr(pb_maxdays), ")
                                ;
                            }

                            time_24hr: true, inline: true,
                            onChange: function (selectedDates, dateStr, instance) {
                                console.log(selectedDates);
                                //calendar.gotoDate(selectedDates[0]);
                                date = selectedDates[0];
                                loadFreeAppointments();
                                $("#myDatePickModal").modal("hide");
                            }
                        });
                        var af = new AlloyFinger(document.getElementById('myDatePickModal'), {
                            swipe: function (evt) {
                                switch (evt.direction) {
                                    case "Left": dp.changeMonth(1);
                                        break;
                                    case "Right": dp.changeMonth(-1);
                                        break;
                                }
                            }
                        });
                    });
            });


        $("#previous-day").click(function () {
            changeDate(-1)
        });

        $("#selected-date").click(function () {
            $("#myDatePickModal").modal("show");
        });

        $("#next-day").click(function () {
            changeDate(1)
        });

        $('#select-appointment').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var appointment = button.data('appointment');
            var modal = $(this)
            modal.find('#selected-appointment-date').text(formatDate(date));
            modal.find('#selected-appointment-time').text(appointment);
            modal.find('#create-appointment').click(function () {
                $.ajax({
                    type: "POST",
                    url: apiURL + "/api/booking/" + token,
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({
                        "date": onlyISODate(date),
                        "timeSlot": appointment
                    }),
                    success: function (result) {
                        window.location.href = "/booking-successful";
                    },
                    error: function (error) {
                        // TODO
                    }
                });
            });
        })

        var dateString = getQueryParameter('date');
        dateFormatRegex = /([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))/;

        if (dateFormatRegex.test(dateString)) {
            date = new Date(dateString);
        }
        @if(Model.token.Active==true)
        {@Html.Raw("loadFreeAppointments();"); }
        else 
        {@Html.Raw("$('#appointments').hide(); $('#err').show();"); }
        
    });

  function formatDate( date ) {
    var days = [
      'Nedelja',
      'Ponedeljek',
      'Torek',
      'Sreda',
      'Četrtek',
      'Petek',
      'Sobota'
    ];
    var months = [
      'januar',
      'februar',
      'marec',
      'april',
      'maj',
      'junij',
      'julij',
      'avgust',
      'september',
      'oktober',
      'november',
      'december',
    ];

    return days[date.getDay()] + ", " + date.getDate() + ". " + months[date.getMonth()];
        }

        function onlyISODate(p_date) {
            return dayjs(p_date).format("YYYY-MM-DD") ;
        }

  function loadFreeAppointments() {
    $( "#selected-date" ).text( formatDate( date ) );

    $( "#previous-day" ).prop( "disabled", false );
    if ( date <= new Date() ) {
      $( "#previous-day" ).prop( "disabled", true );
    }

    $( ".appointment" ).remove();
    $( "#no-appointments" ).hide();
    $( "#appointments-loader" ).show();

    $.ajax( {
        type: "GET",
        url: apiURL + "/api/booking/" + token + "?date=" + onlyISODate(date),
      contentType: "application/json; charset=utf-8",
      success: function ( result ) {
        $( "#appointments-loader" ).hide();
        $( "#no-appointments" ).hide();
        if ( result.length === 0 ) {
          $( "#no-appointments" ).show();
          return;
        }
        result.forEach( appointment => {
          $( "#appointments" ).append( `
          <div
            class="appointment card card-outline card-primary p-1"
            data-toggle="modal"
            data-target="#select-appointment"
            data-appointment="` + formatAppointmentDate( appointment ) + `"
          >
            <div class="card-body text-center">
              <h4>` + formatAppointmentDate( appointment ) + `</h4>
            </div>
          </div>
          `);
        } );
      },
      error: function ( xhr, status, error ) {
        $( "#appointments-loader" ).hide();
        $( "#no-appointments" ).show();
        // TODO: Show invalid token error
        return false;
      }
    } );
  }

  function formatAppointmentDate( appointment ) {
    var start = new Date( appointment.start );
    var end = new Date( appointment.end );

    return start.getHours() + ":"
      + ( start.getMinutes() < 10 ? "0" + start.getMinutes() : start.getMinutes() )
      + " - " + end.getHours() + ":"
      + ( end.getMinutes() < 10 ? "0" + end.getMinutes() : end.getMinutes() );
  }

  function changeDate( noOfDays ) {
    var newDate = new Date( date );
    newDate.setDate( newDate.getDate() + noOfDays );
    var url = new URL( window.location.href );
    url.searchParams.set( "date", onlyISODate( newDate) ); // setting your param
    window.history.pushState( { path: url.href }, '', url.href );
    date = newDate;
    loadFreeAppointments();
  }

  function getQueryParameter( name ) {
    var results = new RegExp( '[\?&]' + name + '=([^&#]*)' )
      .exec( window.location.search );

    return ( results !== null ) ? results[1] || 0 : false;
  }
    </script>
}
