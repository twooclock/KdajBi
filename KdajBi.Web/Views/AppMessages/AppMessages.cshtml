@using Newtonsoft.Json;
@{
    ViewData["Title"] = "SMS Campaigns";
}

@section styles{
    <!-- datatables.net -->
    <link href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />"
    <link href="~/plugins/datatables-buttons/css/buttons.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-fixedheader/css/fixedHeader.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-responsive/css/responsive.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-scroller/css/scroller.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet" />
    <link href="~/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />

    <style>
        table.dataTable tbody tr {
            cursor: pointer;
        }
        table.dataTable > tbody > tr:hover > td > div > span.showOnHover {
            display: block;
            
        }

        table.dataTable > tbody > tr > td > div > span.showOnHover {
            display: none;
        }
    </style >
    }
        <!-- page content -->
        <div class="right_col col-md-12" role="main" >


        <div class="row" >

        <div class="col-md-12 mt-1" >
        <h2 > Pregled obvestil</h2 >


        <div class="table-responsive" >

        <table id="dataTable" class="table table-striped table-bordered" width="100%" >
        <thead >
        <tr >
        <th >
        Datum
        </th >
        <th >
        Obvestilo
        </th >
        <th >
        Prebrano
        </th >
        <th > </th >
        </tr >
        </thead >
        <tbody >
        </tbody >
        </table >

        </div >
        </div >

        <div class="clearfix" > </div >
        </div >
        </div >
        <!-- /page content -->

        @section scripts{
        <!-- datables.net -->
        <script src="~/plugins/datatables/jquery.dataTables.js" > </script >
        <script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.js" > </script >
        <script src="~/plugins/jquery-validation/jquery.validate.js" > </script >
        <script src="~/plugins/bootstrap-select/js/bootstrap-select.min.js" > </script >
        <script src="~/plugins/jquery-ui/jquery-ui.min.js" > </script >
        <script src="~/plugins/js-cookie/js.cookie.min.js" > </script >
        <!-- dayjs -->
        <script src="~/plugins/dayjs/dayjs.min.js" > </script >
        <script src="~/plugins/dayjs/plugin/utc.js" > </script >
        <script > dayjs.extend(window.dayjs_plugin_utc)</script >
        <script src="~/plugins/dayjs/plugin/localizedFormat.js" > </script >
        <script > dayjs.extend(window.dayjs_plugin_localizedFormat);</script >
        <script src="~/plugins/dayjs/plugin/localeData.js" > </script >
        <script > dayjs.extend(window.dayjs_plugin_localeData)</script >

        <script type="text/javascript" >

        var SelectedClientID;
        @await Html.PartialAsync("_ApiAccess")
        function loadScript(src) {
            return new Promise(function (resolve, reject) {
                const s = document.createElement('script');
                let r = false;
                s.type = 'text/javascript';
                s.src = src;
                s.async = true;
                s.onerror = function (err) {
                    reject(err, s);
                };
                s.onload = s.onreadystatechange = function () {
                    // console.log(this.readyState); // uncomment this line to see which ready states are called.
                    if (!r && (!this.readyState || this.readyState == 'complete')) {
                        r = true;
                        resolve();
                    }
                };
                const t = document.getElementsByTagName('script')[0];
                t.parentElement.insertBefore(s, t);
            });
        }

        $(document).ready(function () {
            loadScript("/plugins/dayjs/locale/" + navigator.language.slice(0, 2) + ".js")
                .then(function () {
                    dayjs.locale(navigator.language.slice(0, 2));
                });

            GetAppMessagesTable();

        });


        function truncate( str, n, useWordBoundary ){
          if (str.length <= n) { return str; }
          const subString = str.substr(0, n-1); // the original check
          return (useWordBoundary 
            ? subString.substr(0, subString.lastIndexOf(" ")) 
            : subString);
        };
        

        var GetAppMessagesTable = function () {

            getAPIToken().then((result) => {
            var table = $('#dataTable').DataTable({
                destroy: true,
                responsive: true,
                'order': [[0, 'desc']],
                //                dom: '<""top"">rt<""bottom""ilp><""container"">',
                searching: false,
                'processing': true,
                'serverSide': true,
                'ajax': {
                    'url':  apiURL + "/api/AppMessagestable/",
                    type: 'POST', dataType: 'json',
                    data: function (dtParms) {
                        return JSON.stringify(dtParms);
                    },
                    'contentType': 'application/json; charset=utf-8',
                    "crossDomain": true,
                    "beforeSend": function (xhr, settings) {
                        getAPIToken().then((result) => {
                            $.ajax($.extend(settings, {
                                headers: { "Authorization": "Bearer " +result.AccessToken },
                                beforeSend: $.noop
                            }));
                        });
                        return false;
                    }

                },
                'columns': [
                    { 'data': 'appMessage.messageDate',
                        render: function (data, type, row, meta) {
                            return dayjs(row.appMessage.messageDate).format('L') ;
                        } },
                    { 'data': 'appMessage.message',
                        render: function (data, type, row, meta) {
                            return "<div id='row"+row.id+"' style='overflow:hidden;max-height:20px;'><span class='showOnHover' style='float:right;'>Test!</span>"+row.appMessage.message+"</div>";
                        } },
                    { 'data': 'dateRead',
                        render: function (data, type, row, meta) {
                            return(row.dateRead==null?'': dayjs(row.dateRead).format('L LT')) ;
                        }  }
                ]
            });

                table.on('click', 'td', function () {
                    var tr = $(this).closest('tr');
                    var row = table.row(tr);
                    var rowdata = (table.row(tr).data());
                    var divContents = $("#row" + rowdata.id);
                    if (divContents.css('max-height') != "none") {
                        divContents.css('max-height', '');
                    } else {

                        divContents.css('max-height', '20px');
                    }
                });
                
            });

        }

        

    </script>
}

