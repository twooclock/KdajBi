@using Newtonsoft.Json;
@{
    ViewData["Title"] = "SMS Campaigns";
}

@section styles{
    <!-- datatables.net -->
    <link href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />"
    <link href="~/plugins/datatables-buttons/css/buttons.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-fixedheader/css/fixedHeader.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-responsive/css/responsive.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-scroller/css/scroller.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet" />
    <link href="~/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/plugins/icheck-bootstrap/icheck-bootstrap.min.css" rel="stylesheet" />
}


<!-- page content -->
<div class="right_col col-md-12" role="main">


    <div class="row">

        <div class="col-md-12 mt-1">
                    <h2>Pregled poslanih SMS</h2>

                
                    <div class="table-responsive">

                        <table id="dataTable" class="table table-striped table-bordered" width="100%">
                            <thead>
                                <tr>
                                    <th>
                                        Datum
                                    </th>
                                    <th>
                                        Sporočilo
                                    </th>
                                    <th>
                                        Pošlji
                                    </th>
                                    <th>
                                        Potrjeno Preklicano
                                    </th>
                                    <th>
                                        Poslano
                                    </th>
                                    <th>
                                        Status pošiljanja
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                        
                    </div>
                </div>

                <div class="clearfix"></div>
            </div>
        </div>



<!-- /page content -->
<!-- modal new client content-->

<!-- /modal content-->

@section scripts{
    <!-- datables.net -->
    <script src="~/plugins/datatables/jquery.dataTables.js"></script>
    <script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.js"></script>
    <script src="~/plugins/jquery-validation/jquery.validate.js"></script>
    <script src="~/plugins/bootstrap-select/js/bootstrap-select.min.js"></script>
    <script src="~/plugins/jquery-ui/jquery-ui.min.js"></script>
    <script src="~/plugins/js-cookie/js.cookie.min.js"></script>
    <!-- dayjs -->
    <script src="~/plugins/dayjs/dayjs.min.js"></script>
    <script src="~/plugins/dayjs/plugin/utc.js"></script>
    <script>dayjs.extend(window.dayjs_plugin_utc)</script>
    <script src="~/plugins/dayjs/plugin/localizedFormat.js"></script>
    <script>dayjs.extend(window.dayjs_plugin_localizedFormat);</script>
    <script src="~/plugins/dayjs/plugin/localeData.js"></script>
    <script>dayjs.extend(window.dayjs_plugin_localeData)</script>

    <script type="text/javascript">

        var table;
        var SelectedClientID;
        @await Html.PartialAsync("_ApiAccess")

         function loadScript(src) {
            return new Promise(function (resolve, reject) {
                const s = document.createElement('script');
                let r = false;
                s.type = 'text/javascript';
                s.src = src;
                s.async = true;
                s.onerror = function (err) {
                    reject(err, s);
                };
                s.onload = s.onreadystatechange = function () {
                    // console.log(this.readyState); // uncomment this line to see which ready states are called.
                    if (!r && (!this.readyState || this.readyState == 'complete')) {
                        r = true;
                        resolve();
                    }
                };
                const t = document.getElementsByTagName('script')[0];
                t.parentElement.insertBefore(s, t);
            });
        }

        $(document).ready(function () {
            loadScript("/plugins/dayjs/locale/" + navigator.language.slice(0, 2) + ".js")
                .then(function () {
                    dayjs.locale(navigator.language.slice(0, 2));
                });

            //bind cboLocations
            $("#cboLocations").off('change').change(function (evt) {
                Cookies.set('DefaultLocation', $(this).val());
                GetSmsTable();
            });

            GetSmsTable();


        });


        function truncate( str, n, useWordBoundary ){
          if (str.length <= n) { return str; }
          const subString = str.substr(0, n-1); // the original check
          return (useWordBoundary 
            ? subString.substr(0, subString.lastIndexOf(" ")) 
            : subString) + '<a href="#!" data-toggle="popover" data-content="'+str+'">&hellip;</a>';
        };
        

        var GetSmsTable = function () {

            getAPIToken().then((result) => {
            table = $('#dataTable').DataTable({
                destroy: true,
                responsive: true,
                'order': [[0, 'desc']],
                //                dom: '<""top"">rt<""bottom""ilp><""container"">',
                searching: false,
                'processing': true,
                'serverSide': true,
                'ajax': {
                    'url':  apiURL + "/api/Sms/SmsTable/"+$("#cboLocations").val(),
                    type: 'POST', dataType: 'json',
                    data: function (dtParms) {
                        return JSON.stringify(dtParms);
                    },
                    'contentType': 'application/json; charset=utf-8',
                    "crossDomain": true,
                    "beforeSend": function (xhr, settings) {
                        getAPIToken().then((result) => {
                            $.ajax($.extend(settings, {
                                headers: { "Authorization": "Bearer " +result.AccessToken },
                                beforeSend: $.noop
                            }));
                        });
                        return false;
                    }

                },
                'columns': [
                    { 'data': 'date',
                        render: function (data, type, row, meta) {
                            return dayjs(row.date).format('L') ;
                        } },
                    { 'data': 'msgTxt',
                        render: function (data, type, row, meta) {
                            return truncate(row.msgTxt,50,true) ;
                        } },
                    { 'data': 'sendAfter',
                        render: function (data, type, row, meta) {
                            return dayjs(row.sendAfter).format('L LT') ;
                        }  },
                    {
                        'data': 'approvedAt', className: 'text-center',
                        render: function (data, type, row, meta) {
                            var popTxt = '';
                            var check = '';
                            if (row.canceledAt != null)
                            {
                                popTxt = "Preklicano " + dayjs(row.canceledAt).format('L LT');
                                check = '<div class="icheck-danger"><input type="checkbox"  checked="checked"><label ></label></div>';
                            }
                            else
                            {
                                if (row.approvedAt != null)
                                {
                                    popTxt = "Potrjeno " + dayjs(row.approvedAt).format('L LT');
                                    check = '<div class="icheck-success"><input type="checkbox" checked="checked"><label ></label></div>';
                                }
                                else
                                {
                                    popTxt = "Še ni potrjeno ali preklicano"
                                    check = '<div class="icheck-default"><input type="checkbox"><label ></label></div>';
                                }
                            }
                            return '<a href="#!" data-toggle="popover" data-content="'+popTxt+'">'+check+'</a>'
                        }
                    },
                    { 'data': 'sentAt',
                        render: function (data, type, row, meta) {
                            if (row.sentAt != null) { return dayjs(row.sentAt).format('L LT'); }
                            else { return "";}
                        }  },
                    { 'data': 'recipientsCount', className: 'text-center',
                        render: function (data, type, row, meta) {
                            var classText = '';
                            var apiresp = ((row.recipients[0].apiResponse !='OK' && row.recipients[0].apiResponse !=null) ? " / " + row.recipients[0].apiResponse : '');
                            if (row.recipientsCount > 1)
                            { return "<a href='/sms/campaign/" + row.id + "'>" + row.recipientsCount + "/<p class='text-success d-inline' >" + row.sentOk + "</p>/<p class='text-danger d-inline'>" + row.sentError + "</p></a>"; }
                            else {
                                if (row.recipients[0].client != null) {
                                    if (row.sentOk == 1) { classText = 'text-success';  }
                                    else {
                                        if (row.sentAt != null) { classText = "text-danger"; }
                                    }
                                    return "<p class='" + classText + " d-inline' >" + row.recipients[0].client.fullName + " (" + row.recipients[0].recipient + ")" + apiresp + "</p>";
                                } else
                                    {
                                    if (row.sentOk == 1) { return "<p class='text-success d-inline' >" +  "(" + row.recipients[0].recipient + ")</p>"; }
                                    else { return "<p class='text-danger d-inline' >" + "(" + row.recipients[0].recipient + ")" + apiresp  + "</p>"; }
                                }
                            }
                        }
                    },
                    { data:null, 'orderable': false,
                        render: function (data, type, row, meta) {
                            if (row.recipientsCount == 1) { return '<a class="btn btn-default" data-id="'+meta.row+'" onclick="resendSMS(event)">Ponovno pošlji</a>'; }
                            else { return null; }
                        }
                    }
                ]
            });

                table.on('draw.dt', function () {
                    $('[data-toggle="popover"]').popover({trigger: "click hover" })
                });
            });

        }

        function resendSMS(e) {
            console.log(e.target.getAttribute('data-id'))
            var data = table.row(e.target.getAttribute('data-id')).data();
            var ClientId = (data.recipients[0].client != null ? data.recipients[0].client.id : 0);
            //resend sms campaign
            Swal.fire({
                title: 'Ponovno pošljem sporočilo ' + (ClientId != 0 ? data.recipients[0].client.fullName : data.recipients[0].recipient) + ' ?', html: '<p>' + data.msgTxt + '</p>',
                showDenyButton: true, confirmButtonText: 'Da', denyButtonText: 'Ne',
            }).then((result) => {
                if (result.isConfirmed) {
                    var smsc = {};
                    smsc.CampaignType = 3; //direct without approval
                    smsc.LocationId = $("#cboLocations").val();
                    smsc.MsgTxt = data.msgTxt;
                    smsc.SendAfter = dayjs.utc().local();
                    smsc.Recipients = [data.recipients[0].recipient + '|' + ClientId];

                    getAPIToken().then((result) => {
                        $.ajax({
                            type: "post",
                            data: JSON.stringify(smsc),
                            url: apiURL + "/api/Sms/QueueSmsCampaign",
                            contentType: "application/json; charset=utf-8",
                            headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                            dataType: "json",
                            success: function (result) {
                                if (result == "OK") {
                                    toastr.success('SMS uspešno poslan');
                                }
                                else { toastr.error("Napaka pri pošiljanju:" + result); return false; }
                            },
                            error: function (xhr, status, error) {
                                toastr.error("Napaka pri pošiljanju:" + error.toString());
                                return false;
                            }
                        });
                    });
                } else { return false; }
            });
        }

    </script>
}

