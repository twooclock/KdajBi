@using Newtonsoft.Json;
@using KdajBi.Web.ViewModels;
@model vmLocation
@{
    ViewData["Title"] = "Settings";
}

@section styles{
    <!-- datatables.net -->
    <link href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />"
    <link href="~/plugins/datatables-buttons/css/buttons.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-fixedheader/css/fixedHeader.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-responsive/css/responsive.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-scroller/css/scroller.bootstrap4.css" rel="stylesheet" />
}


<!-- page content -->
<div class="right_col col-md-12" role="main">


    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="dashboard_graph">

                <div class="row x_title">
                    <div class="col-md-6">
                        <h3>Nastavitve</h3>
                    </div>

                </div>
                <div class="row">
                    <div class="col-12">


                        <div class="card card-primary card-outline card-outline-tabs">
                            <div class="card-header p-0 border-bottom-0">
                                <ul class="nav nav-tabs" role="tablist">
                                    <li class="nav-item"><a class="nav-link active" id="general-tab" data-toggle="pill" href="#general" role="tab" aria-controls="general" aria-selected="true">Splošno</a></li>
                                </ul>
                                <div class="card-body">
                                    <div class="tab-content" id="custom-tabs-four-tabContent">
                                        <div id="general" class="tab-pane fade active show" role="tabpanel" aria-labelledby="general-tab">
                                            <form class="form-horizontal">
                                                <div class="form-group">
                                                    <div class="custom-control custom-checkbox">
                                                    <input class="custom-control-input" type="checkbox" id="cbShow3Calendars" value="true">
                                                    <label for="cbShow3Calendars" class="custom-control-label">Prikaži 3 koledarčke pri naročanju</label>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label for="txtRowHeight">
                                                        Višna vrstice:
                                                    </label>
                                                    <input type="text" id="txtRowHeight" name="txtRowHeight" class="form-control" />
                                                </div>
                                                <div class="form-group">
                                                    <label for="txtMinColWidth">
                                                        Min. širina stolpca:
                                                    </label>
                                                    <input type="text" id="txtMinColWidth" name="txtMinColWidth" class="form-control" />
                                                </div>
                                            </form>
                                            <div class="form-group">
                                                    <div class="col-sm-offset-2 col-sm-10">
                                                        <button class="btn btn-danger" onclick="SaveSettings()">Shrani</button>
                                                    </div>
                                                </div>
                                        </div>
                                        


                                    </div>
                                    <!-- /.tab-content -->
                                </div>
                            </div>
                        </div>


                    </div>
                </div>

                <div class="clearfix"></div>
            </div>
        </div>

    </div>
    <br />


</div>
<!-- /page content -->
<!-- modal content-->
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Locations</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="dataform" class="dataform" name="dataform">
                    <div class="form-group">
                        <label for="txtEmail">
                            name:
                        </label>
                        <input type="text" id="txtName" name="txtName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="cbActive" value="true" checked="">
                            <span class="custom-control-label">Active</span>
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="cmdDelete">
                    Delete
                </button>
                <button type="button" class="btn btn-primary" id="cmdSave">
                    Save
                </button>
            </div>
        </div>
    </div>
</div>
<!-- /modal content-->

@section scripts{
    <!-- datables.net -->
    <script src="~/plugins/datatables/jquery.dataTables.js"></script>
    <script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.js"></script>
    <script src="~/plugins/jquery-validation/jquery.validate.js"></script>

    <script type="text/javascript">

        var myTable;
        @await Html.PartialAsync("_ApiAccess")

        $(document).ready(function () {

            loadSettings();
            //init toastr
            toastr.options.preventDuplicates = true;
            toastr.options.timeOut = 1000;

            $('#dataform').validate({
                rules: {
                    txtName: {
                        minlength: 3,
                        maxlength: 50,
                        required: true
                    }
                },
                messages: {
                    txtName: "Invalid name!"
                },
                highlight: function (element) {
                    $(element).closest('.form-control').addClass('is-invalid');
                },
                unhighlight: function (element) {
                    $(element).closest('.form-control').removeClass('is-invalid');
                },
                errorElement: 'span',
                errorClass: 'invalid-feedback',
                errorPlacement: function (error, element) {
                    if (element.parent('.input-group').length) {
                        error.insertAfter(element.parent());
                    } else { error.insertAfter(element); }
                }
            });

            $('#myModal').on('hidden.bs.modal', function (e) {
                CancelModal();
            });
            
        
            
        });

        function SaveSettings() {
            var settings = new Object();
            settings["AppointmentsShow3Calendars"] = $("#cbShow3Calendars").prop("checked");
            settings["AppointmentsRowHeight"] = $("#txtRowHeight").val(); 
            settings["AppointmentsMinColWidth"] = $("#txtMinColWidth").val(); 
        
            getAPIToken().then((result) => {
                $.ajax({
                    type: "post",
                    data: JSON.stringify(settings),
                    url: apiURL + "/api/Settings/Save/",
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                    dataType: "json",
                    success: function (result) {
                        if (result == "OK") { toastr.success("Shranjeno"); return true; }
                        else { toastr.error("Napaka:" + result); return false; }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                        return false;
                    }
                });
            });
        }

        async function loadSettings() {
            var settings = new Object();
            settings["AppointmentsShow3Calendars"] = 'false';
            settings["AppointmentsRowHeight"] = '';
            settings["AppointmentsMinColWidth"] = '';
            
            getAPIToken().then((result) => {
                $.ajax({
                    type: "post",
                    data: JSON.stringify(settings),
                    url: apiURL+"/api/Settings/Load/",
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                    dataType: "json",
                     success: function (result) {
                         if (result["AppointmentsShow3Calendars"] != undefined) {
                             if (result["AppointmentsShow3Calendars"] == "true") { $('#cbShow3Calendars').prop('checked', true);}
                         }
                         if (result["AppointmentsRowHeight"] != undefined) {
                             if (result["AppointmentsRowHeight"].length > 0) { $('#txtRowHeight').val(result["AppointmentsRowHeight"]); }
                         }
                         if (result["AppointmentsMinColWidth"] != undefined) {
                             if (result["AppointmentsMinColWidth"].length > 0) { $('#txtMinColWidth').val(result["AppointmentsMinColWidth"]); }
                         }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                        return false;
                    }
                });
            });
        }

        function CancelModal() {
            $('#dataform').validate().resetForm();
            //remove higlight ( reset form does not do this!)
            $("#dataform input, #dataform label").each(function (key, value) {
                $(this).closest('.form-control').removeClass('is-invalid');
            });
        }



        function cmdAdd_Click() {
            setForm(0);
            $('#cmdDelete').addClass('invisible')
            $("#myModal").modal("show");
            $("#cmdSave").off('click').click(function (evt) {
                if (SaveRecord(0) != false) {
                    $("#myModal").modal("hide");
                    GetTable();
                }
            });


        }

        function setForm(p_ID) {
            if (p_ID == 0) {
                //clear form
                $("#txtName").val('');
                $("#cbActive").prop('checked', true);
            }
            else {
                //fill form
                getAPIToken().then((result) => {
                $.ajax({
                    type: "get",
                    url: apiURL+"/api/Locations/"+p_ID,
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer '+result.AccessToken },
                    dataType: "json",
                    async: true,
                    success: function (result) {
                        $("#txtName").val(result.name);
                        $("#cbActive").prop('checked', result.active);
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                    }
                });
                });
            }

        }

        function showDetail(p_ID) {
            setForm(p_ID);
            $('#cmdDelete').removeClass('invisible');
            $("#myModal").modal("show");
            $("#cmdSave").off('click').click(function (evt) {
                if (SaveRecord(p_ID) != false) { $("#myModal").modal("hide"); }
            });
            $("#cmdDelete").off('click').click(function (evt) {
                if (DeleteRecord(p_ID) != false) { $("#myModal").modal("hide"); }
            });

        }

        function DeleteRecord(p_ID) {
            Swal.fire({
                title: 'Zbrišem nastavitev?',
                showDenyButton: true,
                confirmButtonText: 'Da',
                denyButtonText: 'Ne',
            }).then((result) => {
                if (result.isConfirmed) {
                    getAPIToken().then((result) => {
                        $.ajax({
                            type: "DELETE",
                            url: apiURL + "/api/locations/" + p_ID,
                            contentType: "application/json; charset=utf-8",
                            headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                            dataType: "json",
                            success: function (result) {
                                if (result == "OK") { toastr.success("Zbrisano"); GetTable(); return true; }
                                else { toastr.error("Napaka:" + result); return false; }
                            },
                            error: function (xhr, status, error) {
                                toastr.error("Napaka:" + error.toString());
                                return false;
                            }
                        });
                    });

                } else { return false; }
            });
        }

        function SaveRecord(p_ID) {
            if ($('#dataform').valid()) {
                var company={};
                company.id = p_ID;
                company.Name = $('#txtName').val();
                company.Active = $("#cbActive").prop('checked');
                getAPIToken().then((result) => {
                $.ajax({
                    type: "post",
                    data: JSON.stringify(company),
                    url: apiURL+"/api/location/",
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                    dataType: "json",
                    success: function (result) {
                         if (result == "OK") { toastr.success("Shranjeno"); GetTable(); return true; }
                        else { toastr.error("Napaka:" + result); return false; }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                        return false;
                    }
                });
                });
            } else { return false; }
        }

        


    </script>
}

