@using Newtonsoft.Json;
@{
    ViewData["Title"] = "Stranke";
}

@section styles{
    <!-- datatables.net -->
    <link href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />"
    <link href="~/plugins/datatables-buttons/css/buttons.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-fixedheader/css/fixedHeader.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-responsive/css/responsive.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-scroller/css/scroller.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet" />
    <link href="~/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
}


<!-- page content -->
<div class="right_col col-md-12" role="main">


    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="dashboard_graph">

                <div class="row x_title">
                    <div class="col-md-6">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <div class="input-group-text">
                                    <span class="fas fa-user"></span>
                                </div>
                            </div><input id="clientsearch" type="text" class="form-control" placeholder="Stranka...">

                        </div>
                    </div>

                </div>

                <div class="col-12">
                    <div class="table-responsive">

                        <table id="dataTable" class="table table-striped table-bordered" width="100%">
                            <thead>
                                <tr>
                                    <th>
                                        Name
                                    </th>

                                    <th>
                                        Active
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                        <button type="button" id="cmdClientAdd" onclick="cmdClientAdd_Click();" class="btn btn-primary btn-lg">
                            Add new
                        </button>
                    </div>
                </div>

                <div class="clearfix"></div>
            </div>
        </div>

    </div>
    <br />


</div>
<!-- /page content -->
<!-- modal new client content-->
<div id="ClientModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="ClientModalLabel">Stranka</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="dataform" class="dataform" name="dataform">
                    <div class="form-group">
                        <label for="txtClientFirstName">
                            Ime:
                        </label>
                        <input type="text" id="txtClientFirstName" name="txtClientFirstName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="txtClientLastName">
                            Priimek:
                        </label>
                        <input type="text" id="txtClientLastName" name="txtClientLastName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="txtClientMobile">
                            Mobi:
                        </label>
                        <div class="input-group">
                            <input type="text" id="txtClientMobile" name="txtClientMobile" class="form-control" />
                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <input id="cbClientSMS" type="checkbox" aria-label="Checkbox for following text input">&nbsp;dovoli obveščanje
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="txtClientEmail">
                            Email:
                        </label>
                        <div class="input-group">
                            <input type="text" id="txtClientEmail" name="txtClientEmail" class="form-control" />
                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <input id="cbClientEmail" type="checkbox" aria-label="Checkbox for following text input">&nbsp;dovoli obveščanje
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="txtClientBirthday">
                            Rojstni dan:
                        </label>
                        <input type="text" id="txtClientBirthday" name="txtClientBirthday" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="txtClientAddress">
                            Naslov:
                        </label>
                        <input type="text" id="txtClientAddress" name="txtClientAddress" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="txtClientZip">
                            Pošta:
                        </label>
                        <input type="text" id="txtClientZip" name="txtClientZip" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="txtClientNotes">
                            Opombe:
                        </label>
                        <input type="text" id="txtClientNotes" name="txtClientNotes" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="txtAppointmentNotes">
                            Opombe pri naročanju:
                        </label>
                        <input type="text" id="txtAppointmentNotes" name="txtAppointmentNotes" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="cbActive" value="true" checked="">
                            <span class="custom-control-label">Active</span>
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="cmdClientDelete">
                    Zbriši
                </button>
                <button type="button" class="btn btn-primary" id="cmdClientSave">
                    Shrani
                </button>
            </div>
        </div>
    </div>
</div>
<!-- /modal content-->

@section scripts{
    <!-- datables.net -->
    <script src="~/plugins/datatables/jquery.dataTables.js"></script>
    <script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.js"></script>
    <script src="~/plugins/jquery-validation/jquery.validate.js"></script>
    <script src="~/plugins/bootstrap-select/js/bootstrap-select.min.js"></script>
    <script src="~/plugins/jquery-ui/jquery-ui.min.js"></script>
    <script type="text/javascript">

        var SelectedClientID;
        var myTable;
        @await Html.PartialAsync("_ApiAccess")

        $(document).ready(function () {
            //bind cboLocations
            $("#cboLocations").off('change').change(function (evt) {
                GetClientsTable();
                //FillClientSearch();
            });

            GetClientsTable();

            //FillClientSearch();

            $('#dataform').validate({
                    rules: {
                        txtClientFirstName: {
                            minlength: 3,
                            maxlength: 50,
                            required: true
                        }
                    },
                    messages: {
                        txtClientFirstName: "Neveljavno ime!"
                    },
                    highlight: function (element) {
                        $(element).closest('.form-control').addClass('is-invalid');
                    },
                    unhighlight: function (element) {
                        $(element).closest('.form-control').removeClass('is-invalid');
                    },
                    errorElement: 'span',
                    errorClass: 'invalid-feedback',
                    errorPlacement: function (error, element) {
                        if (element.parent('.input-group').length) {
                            error.insertAfter(element.parent());
                        } else { error.insertAfter(element); }
                    }
                });

            $('#myModal').on('hidden.bs.modal', function (e) {
                CancelClientModal();
            });

            $("#clientsearch").on('input', function () {
                delay(function () {
                    myTable.search($( "#clientsearch" ).val(), false, false).draw();
                }, 1000);
            });
        });

        var delay = (function () {
            var timer = 0;
            return function (callback, ms) {
                clearTimeout(timer);
                timer = setTimeout(callback, ms);
            };
        })()

        function CancelClientModal() {
            $('#dataform').validate().resetForm();
            //remove higlight ( reset form does not do this!)
            $("#dataform input").each(function (key, value) {
                $(this).closest('.form-control').removeClass('is-invalid');
            });
        }

        var GetClientsTable = function () {

            myTable = $('#dataTable').DataTable({
                destroy: true,
                responsive: true,
                'order': [[0, 'desc']],
                dom: '<"row"lr><"row"<"col-12"t>><"row"<"col-sm-6"i><"col-sm-6"p>>',
                searching: true,
                'processing': true,
                'serverSide': true,
                'ajax': {
                    'url': apiURL + "/api/clientstable/" + $("#cboLocations").val(),
                    type: 'POST', dataType: 'json',
                    data: function (dtParms) {
                        // I send it as a string to reduce the chance of an error before it reaches the server.
                        return JSON.stringify(dtParms);
                    },
                    'contentType': 'application/json; charset=utf-8',
                    "crossDomain": true,
                    "beforeSend": function (xhr, settings) {
                        getAPIToken().then((result) => {
                            $.ajax($.extend(settings, {
                                headers: { "Authorization": "Bearer " +result.AccessToken },
                                beforeSend: $.noop
                            }));
                        });
                        return false;
                    }

                },
                'columns': [
                    { 'data': 'firstName', render: function (data, type, row, meta) { return row.fullName; } },
                    {
                        'data': 'active', className: 'text-center',
                        render: function (data, type, row, meta) {
                            if (row.active == true)
                            { return '<div class="custom-control custom-checkbox"><input type="checkbox" class="custom-control-input" checked="checked"><label class="custom-control-label"></label></div>'; }
                            else
                            { return '<div class="custom-control custom-checkbox"><input type="checkbox" class="custom-control-input" ><label class="custom-control-label"></label></div>'; }
                        }
                    },
                    {
                        data: null, 'orderable': false,
                        render: function (data, type, row, meta) {
                            return '<a class="btn btn-default" onclick="showClientDetail(' + row.id + ');">Urejanje</a>';
                        }
                    }
                ]
            });


        }

        function FillClientSearch() {
            //fill client search
            getAPIToken().then((result) => {
                $.ajax({
                    type: "GET",
                    url:  apiURL + "/api/clients/"+$("#cboLocations").val(),
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer '+result.AccessToken },
                    dataType: "json",
                    async: true,
                    success: function (msg) {
                        myClients = msg.map(x => {
                            return {label:x.fullName, value:x.id};
                          });
                        $( "#clientsearch" ).autocomplete({
                            source: myClients,
                            select: function (event, ui) {
                                $("#clientsearch").val(ui.item.label);
                                SelectedClientID = myClients.indexOf(ui.item.value);
                                return false;
                            },
                            focus:function (event, ui) {event.preventDefault(); return false;}
                        });
                    },
                    error: function () {
                        toastr.error("Napaka: Ni podatkov o strankah!");
                    }
                });
            });
        }

        function cmdClientAdd_Click() {
            setClientForm(0);
            $('#cmdClientDelete').addClass('invisible')
            $("#ClientModal").modal("show");
            $("#cmdClientSave").off('click').click(function (evt) {
                if (SaveClient(0) != false) {
                    $("#ClientModal").modal("hide");
                    GetClientsTable();
                }
            });


        }

        function setClientForm(p_ID) {
            if (p_ID == 0) {
                //clear form
                $("#txtClientFirstName").val('');
                $("#txtClientLastName").val('');
                $("#txtClientMobile").val('');
                $("#txtClientEmail").val('');
                $("#cbClientSMS").prop('checked', true);
                $("#cbClientEmail").prop('checked', true);
                $("#txtClientBirthday").val('');
                $("#txtClientAddress").val('');
                $("#txtClientZip").val('');
                $("#txtClientNotes").val('');
                $("#txtAppointmentNotes").val('');
                $("#cbActive").prop('checked', true);
            }
            else {
                //fill form
                getAPIToken().then((result) => {
                $.ajax({
                    type: "get",
                    url: apiURL+"/api/client/"+p_ID,
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                    dataType: "json",
                    async: true,
                    success: function (result) {
                        $("#txtClientFirstName").val(result.firstName);
                        $("#txtClientLastName").val(result.lastName);
                        $("#txtClientMobile").val(result.mobile);
                        $("#txtClientEmail").val(result.email);
                        $("#cbClientSMS").prop('checked', result.allowsSMS);
                        $("#cbClientEmail").prop('checked', result.allowsEmail);
                        $("#txtClientBirthday").val(result.birthday);
                        $("#txtClientAddress").val(result.address);
                        $("#txtClientZip").val(result.zipCode);
                        $("#txtClientNotes").val(result.notes);
                        $("#txtAppointmentNotes").val(result.appointmentNotes);
                        $("#cbActive").prop('checked', result.active);

                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                    }
                });
                });
            }

        }

        function showClientDetail(p_ID) {
            setClientForm(p_ID);
            $('#cmdClientDelete').removeClass('invisible');
            $("#ClientModal").modal("show");
            $("#cmdClientSave").off('click').click(function (evt) {
                if (SaveClient(p_ID) != false) { $("#ClientModal").modal("hide"); }
            });
            $("#cmdClientDelete").off('click').click(function (evt) {
                if (DeleteClient(p_ID) != false) { $("#ClientModal").modal("hide"); }
            });

        }

        function DeleteClient(p_ID) {
            Swal.fire({
                title: 'Zbrišem stranko?',
                showDenyButton: true,
                confirmButtonText: 'Da',
                denyButtonText: 'Ne',
            }).then((result) => {
                if (result.isConfirmed) {
                    getAPIToken().then((result) => {
                        $.ajax({
                            type: "DELETE",
                            url: apiURL + "/api/client/" + p_ID,
                            contentType: "application/json; charset=utf-8",
                            headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                            dataType: "json",
                            success: function (result) {
                                if (result == "OK") { toastr.success("Stranka zbrisana"); GetClientsTable(); return true; }
                                else { toastr.error("Napaka:" + result); return false; }
                            },
                            error: function (xhr, status, error) {
                                toastr.error("Napaka:" + error.toString());
                                return false;
                            }
                        });
                    });

                } else { return false; }
            });
        }

        function SaveClient(p_ID) {
            if ($('#dataform').valid()) {
                var client={};
                client.id = p_ID;
                client.LocationId = parseInt($("#cboLocations").val());
                client.FirstName = $('#txtClientFirstName').val();
                client.LastName =$("#txtClientLastName").val();
                client.Mobile =$("#txtClientMobile").val();
                client.Email =$("#txtClientEmail").val();
                client.AllowsSMS = $("#cbClientSMS").prop('checked');
                client.AllowsEmail = $("#cbClientEmail").prop('checked');
                client.Birthday =new Date($("#txtClientBirthday").val());
                client.Address =$("#txtClientAddress").val();
                client.ZipCode =$("#txtClientZip").val();
                client.Notes =$("#txtClientNotes").val();
                client.AppointmentNotes =$("#txtAppointmentNotes").val();
                client.Active = $("#cbActive").prop('checked');
                client.Sex = "F";
                getAPIToken().then((result) => {
                $.ajax({
                    type: "post",
                    data: JSON.stringify(client),
                    url: apiURL+"/api/client/",
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                    dataType: "json",
                    success: function (retval) {
                         if (retval.result == "OK") { toastr.success("Shranjeno"); GetClientsTable(); return true; }
                        else { toastr.error("Napaka:" + result); return false; }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                        return false;
                    }
                });
                });
            } else { return false; }
        }


    </script>
}

