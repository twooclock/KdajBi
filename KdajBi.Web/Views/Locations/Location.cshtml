@using Newtonsoft.Json;
@using KdajBi.Web.ViewModels;
@model vmLocation
@{
    ViewData["Title"] = "Location";
}

@section styles{
    <!-- datatables.net -->
    <link href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />"
    <link href="~/plugins/datatables-buttons/css/buttons.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-fixedheader/css/fixedHeader.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-responsive/css/responsive.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-scroller/css/scroller.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet" />
}


<!-- page content -->
<div class="right_col col-md-12" role="main">


    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="dashboard_graph">

                <div class="row x_title">
                    <div class="col-md-6">
                        <h3>@Html.Raw(@Model.Location.Name)</h3>

                    </div>

                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="card card-primary card-outline card-outline-tabs">
                            <div class="card-header p-0 border-bottom-0">
                                <ul class="nav nav-tabs" id="tab_@Html.Raw(@Model.Location.Id)" role="tablist">
                                    <li class="nav-item">
                                        <a class="nav-link active" id="general-tab" data-toggle="tab" href="#general" role="tab" aria-controls="general" aria-selected="true">Splošno</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" id="timetable-tab" data-toggle="tab" href="#timetable" role="tab" aria-controls="timetable" aria-selected="false">Urnik</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" id="workplaces-tab" data-toggle="tab" href="#workplace" role="tab" aria-controls="workplace" aria-selected="false">Delovna mesta</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" id="services-tab" data-toggle="tab" href="#services" role="tab" aria-controls="services" aria-selected="false">Storitve</a>
                                    </li>
                                </ul>
                            </div>
                            <div class="card-body">
                                <div class="tab-content" id="custom-tabs-four-tabContent">
                                    <div class="tab-pane fade active show" id="general" role="tabpanel" aria-labelledby="general-tab">
                                        <form id="formGeneral" name="formGeneral" class="form-horizontal">
                                            <div class="form-group">
                                                <label for="inputName" class="col-sm-2 control-label">Ime</label>
                                                <div class="col-sm-10">
                                                    <input class="form-control" id="inputName" placeholder="Ime" value="@Html.Raw(@Model.Location.Name)">
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputTel" class="col-sm-2 control-label">Telefon</label>
                                                <div class="col-sm-10">
                                                    <input class="form-control" id="inputTel" placeholder="Telefon" value="@Html.Raw(@Model.Location.Tel)">
                                                </div>
                                            </div>
                                        </form>

                                        <div class="form-group">
                                            <div class="col-sm-offset-2 col-sm-10">
                                                <button class="btn btn-default" onclick="saveGeneral()">Shrani</button>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="tab-pane fade" id="timetable" role="tabpanel" aria-labelledby="timetable-tab">
                                        <div class="card">
                                            <!-- /.card-header -->
                                            <div class="card-body p-0">
                                                <form id="formSchedule" name="formSchedule" class="form-horizontal">
                                                    <table class="table-vcenter table-sm">
                                                        <tbody>
                                                            <tr>
                                                                <td>Ponedeljek</td>
                                                                <td><input id="Mo_from" name="Mo_from" class="form-control" placeholder="8:00" value="@Html.Raw(@Model.Location.Schedule.MondayStart.ToString("HH:mm"))"></td>
                                                                <td><input id="Mo_to" name="Mo_to" class="form-control" placeholder="20:00" value="@Html.Raw(@Model.Location.Schedule.MondayEnd.ToString("HH:mm"))"></td>
                                                            </tr>
                                                            <tr>
                                                                <td>Torek</td>
                                                                <td><input id="Tu_from" name="Tu_from" class="form-control" placeholder="8:00" value="@Html.Raw(@Model.Location.Schedule.TuesdayStart.ToString("HH:mm"))"></td>
                                                                <td><input id="Tu_to" name="Tu_to" class="form-control" placeholder="20:00" value="@Html.Raw(@Model.Location.Schedule.TuesdayEnd.ToString("HH:mm"))"></td>
                                                            </tr>
                                                            <tr>
                                                                <td>Sreda</td>
                                                                <td><input id="We_from" name="We_from" class="form-control" placeholder="8:00" value="@Html.Raw(@Model.Location.Schedule.WednesdayStart.ToString("HH:mm"))"></td>
                                                                <td><input id="We_to" name="We_to" class="form-control" placeholder="20:00" value="@Html.Raw(@Model.Location.Schedule.WednesdayEnd.ToString("HH:mm"))"></td>
                                                            </tr>
                                                            <tr>
                                                                <td>Četrtek</td>
                                                                <td><input id="Th_from" name="Th_from" class="form-control" placeholder="8:00" value="@Html.Raw(@Model.Location.Schedule.ThursdayStart.ToString("HH:mm"))"></td>
                                                                <td><input id="Th_to" name="Th_to" class="form-control" placeholder="20:00" value="@Html.Raw(@Model.Location.Schedule.ThursdayEnd.ToString("HH:mm"))"></td>
                                                            </tr>
                                                            <tr>
                                                                <td>Petek</td>
                                                                <td><input id="Fr_from" name="Fr_from" class="form-control" placeholder="8:00" value="@Html.Raw(@Model.Location.Schedule.FridayStart.ToString("HH:mm"))"></td>
                                                                <td><input id="Fr_to" name="Fr_to" class="form-control" placeholder="20:00" value="@Html.Raw(@Model.Location.Schedule.FridayEnd.ToString("HH:mm"))"></td>
                                                            </tr>
                                                            <tr>
                                                                <td>Sobota</td>
                                                                <td><input id="Sa_from" name="Sa_from" class="form-control" placeholder="8:00" value="@Html.Raw(@Model.Location.Schedule.SaturdayStart.ToString("HH:mm"))"></td>
                                                                <td><input id="Sa_to" name="Sa_to" class="form-control" placeholder="20:00" value="@Html.Raw(@Model.Location.Schedule.SaturdayEnd.ToString("HH:mm"))"></td>
                                                            </tr>
                                                            <tr>
                                                                <td>Nedelja</td>
                                                                <td><input id="Su_from" class="form-control" placeholder="8:00" value="@Html.Raw(@Model.Location.Schedule.SundayStart.ToString("HH:mm"))"></td>
                                                                <td><input id="Su_to" class="form-control" placeholder="20:00" value="@Html.Raw(@Model.Location.Schedule.SundayEnd.ToString("HH:mm"))"></td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </form>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-sm-offset-2 col-sm-10">
                                                    <button class="btn btn-default" onclick="saveSchedule()">Shrani</button>
                                                </div>
                                            </div>
                                            <!-- /.card-body -->
                                        </div>
                                    </div>

                                    <div class="tab-pane fade" id="workplace" role="tabpanel" aria-labelledby="workplaces-tab">
                                        <div class="card">
                                            <!-- /.card-header -->
                                            <div class="card-body p-0">
                                                <div class="col-12">
                                                    <div class="table-responsive">
                                                        <table id="dtWorkplaces" class="table table-striped table-bordered" width="100%">
                                                            <thead>
                                                                <tr>
                                                                    <th>
                                                                        #
                                                                    </th>
                                                                    <th>
                                                                        Naziv
                                                                    </th>
                                                                    <th>
                                                                        Google koledar
                                                                    </th>
                                                                    <th>
                                                                        Aktivno
                                                                    </th>
                                                                    <th>
                                                                    </th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                            </tbody>
                                                        </table>
                                                        <button type="button" id="cmdAdd" onclick="cmdAdd_Click();" class="btn btn-primary btn-lg">
                                                            Dodaj
                                                        </button>
                                                    </div>
                                                </div>

                                            </div>

                                            <!-- /.card-body -->
                                        </div>
                                    </div>

                                    <div class="tab-pane fade" id="services" role="tabpanel" aria-labelledby="services-tab">
                                        <div class="card">
                                            <!-- /.card-header -->
                                            <div class="card-body p-0">
                                                <div class="col-12">
                                                    <div class="table-responsive">
                                                        <table id="dtServices" class="table table-striped table-bordered" width="100%">
                                                            <thead>
                                                                <tr>
                                                                    <th>
                                                                        Naziv
                                                                    </th>
                                                                    <th>
                                                                        Trajanje (min)
                                                                    </th>
                                                                    <th>
                                                                        Aktivno
                                                                    </th>
                                                                    <th>
                                                                    </th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                            </tbody>
                                                        </table>
                                                        <button type="button" id="cmdServiceAdd" onclick="cmdServiceAdd_Click();" class="btn btn-primary btn-lg">
                                                            Dodaj
                                                        </button>
                                                    </div>
                                                </div>

                                            </div>

                                            <!-- /.card-body -->
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <!-- /.card -->
                        </div>

                    </div>
                </div>

                <div class="clearfix"></div>
            </div>
        </div>

    </div>
    <br />


</div>
<!-- /page content -->
<!-- Workplace modal content-->
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Delovno mesto</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="formWorkplace" class="formWorkplace" name="formWorkplace">
                    <div class="form-group">
                        <label for="txtPosition">
                            Pozicija:
                        </label>
                        <input type="text" id="txtPosition" name="txtPosition" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="txtName">
                            Ime/Naziv:
                        </label>
                        <input type="text" id="txtName" name="txtName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="cboGooCal">
                            Google koledar:
                        </label>
                        <select id="cboGooCal" name="cboGooCal" class="selectpicker custom-select custom-select-sm form-control">
                            <option value="0">[Create new calendar]</option>
                            @foreach (var item in Model.GoogleCalendars)
                            {
                                <option value="@item.Key">@Html.Raw(item.Value)</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="cbActive" value="true" checked="">
                            <span class="custom-control-label">Aktivno</span>
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="cmdDelete">
                    Zbriši
                </button>
                <button type="button" class="btn btn-primary" id="cmdSave">
                    Shrani
                </button>
            </div>
        </div>
    </div>
</div>
<!-- /modal content-->
<!-- modal new service content-->
<div id="ServiceModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="ServiceModalLabel">Storitev</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="formService" class="formService" name="formService">
                    <div class="form-group">
                        <label for="txtServiceName">
                            Naziv:
                        </label>
                        <input type="text" id="txtServiceName" name="txtServiceName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="txtServiceMinutes">
                            Trajanje (v minutah):
                        </label>
                        <input id="txtServiceMinutes" type="number" pattern="[0-9.]+" name="txtServiceMinutes" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="cbActive" value="true" checked="">
                            <span class="custom-control-label">Active</span>
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="cmdServiceDelete">
                    Zbriši
                </button>
                <button type="button" class="btn btn-primary" id="cmdServiceSave">
                    Shrani
                </button>
            </div>
        </div>
    </div>
</div>
<!-- /modal content-->

@section scripts{
    <!-- datables.net -->
    <script src="~/plugins/datatables/jquery.dataTables.js"></script>
    <script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.js"></script>
    <script src="~/plugins/jquery-validation/jquery.validate.js"></script>
    <script src="~/plugins/bootstrap-select/js/bootstrap-select.min.js"></script>
    <script src="https://apis.google.com/js/api.js"></script>

    <script type="text/javascript">

        var workplacesLoaded=false;
        var servicesLoaded=false;
        @await Html.PartialAsync("_ApiAccess")
        @await Html.PartialAsync("_GooApiAccess")


        $.validator.addMethod( "time", function( value, element ) {
	        return  /^([01]\d|2[0-3]|[0-9])(:[0-5]\d){1,2}$/.test( value );
        }, "Vnesite veljaven čas npr. 8:30 ali 17:45" );

        $.validator.addMethod("greaterThan",
        function (value, element, param) {
              var $otherElement = $(param);
              return (new Date("01/01/0001 "+value) > new Date("01/01/0001 "+$otherElement.val()));
        }, "Konec mora biti večji od začetka.");

        $(document).ready(function () {
            //swal inside modal!
            $.fn.modal.Constructor.prototype._enforceFocus = function() {};

            gapi.load('client:auth2', function () {
                gapi.client.load(DISCOVERY_DOCS, 'v3').then(function () {
                    gapi.auth.setToken({ access_token: gooToken.access_token })
                    //fill goo calendar combo
                    //LoadCalendars();
                })
            })

            //bind cboLocations
            $("#cboLocations").val( @Html.Raw(@Model.Location.Id));
            $("#cboLocations").off('change').change(function (evt) {
                window.location = "../location/"+$(this).val();
            });

             $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                 if (e.target.id == "workplaces-tab" && workplacesLoaded == false) { GetWorkplacesTable(); workplacesLoaded = true;}
                 if (e.target.id == "services-tab" && servicesLoaded == false) { GetServicesTable(); servicesLoaded = true;}
            });
            

            $('#formGeneral').validate({
                rules: {
                    inputName: {
                        minlength: 3,
                        maxlength: 50,
                        required: true
                    }
                },
                messages: {
                    inputName: "Invalid name!"
                },
                highlight: function (element) {
                    $(element).closest('.form-control').addClass('is-invalid');
                },
                unhighlight: function (element) {
                    $(element).closest('.form-control').removeClass('is-invalid');
                },
                errorElement: 'span',
                errorClass: 'invalid-feedback',
                errorPlacement: function (error, element) {
                    if (element.parent('.input-group').length) {
                        error.insertAfter(element.parent());
                    } else { error.insertAfter(element); }
                }
            });

            $('#formSchedule').validate({
                rules: {
                    Mo_from: { time: true },
                    Mo_to: { time: true, greaterThan: "#Mo_from" },
                    Tu_from: { time: true },
                    Tu_to: { time: true, greaterThan: "#Tu_from" },
                    We_from: { time: true },
                    We_to: { time: true, greaterThan: "#We_from" },
                    Th_from: { time: true },
                    Th_to: { time: true, greaterThan: "#Th_from" },
                    Fr_from: { time: true },
                    Fr_to: { time: true, greaterThan: "#Fr_from" },
                    Sa_from: { time: true },
                    Sa_to: { time: true, greaterThan: "#Sa_from" },
                    Su_from: { time: true },
                    Su_to: { time: true, greaterThan: "#Su_from" },
                },
                highlight: function (element) {
                    $(element).closest('.form-control').addClass('is-invalid');
                },
                unhighlight: function (element) {
                    $(element).closest('.form-control').removeClass('is-invalid');
                },
                errorElement: 'span',
                errorClass: 'invalid-feedback',
                errorPlacement: function (error, element) {
                    if (element.parent('.input-group').length) {
                        error.appendTo(element.parent('.input-group'));
                    } else {
                        if (element.parent('.mojgroup').length) {
                            error.appendTo(element.parent('.mojgroup'));
                        } else { error.insertAfter(element); }
                    }
                }
            });

            $('#formWorkplace').validate({
                rules: {
                    txtName: {
                        minlength: 3,
                        maxlength: 50,
                        required: true
                    }
                },
                messages: {
                    txtName: "Invalid name!"
                },
                highlight: function (element) {
                    $(element).closest('.form-control').addClass('is-invalid');
                },
                unhighlight: function (element) {
                    $(element).closest('.form-control').removeClass('is-invalid');
                },
                errorElement: 'span',
                errorClass: 'invalid-feedback',
                errorPlacement: function (error, element) {
                    if (element.parent('.input-group').length) {
                        error.insertAfter(element.parent());
                    } else { error.insertAfter(element); }
                }
            });

            $('#formService').validate({
                    rules: {
                        txtServiceName: {
                            minlength: 3,
                            maxlength: 150,
                            required: true
                        }
                    },
                    messages: {
                        txtServiceName: "Neveljavno ime!"
                    },
                    highlight: function (element) {
                        $(element).closest('.form-control').addClass('is-invalid');
                    },
                    unhighlight: function (element) {
                        $(element).closest('.form-control').removeClass('is-invalid');
                    },
                    errorElement: 'span',
                    errorClass: 'invalid-feedback',
                    errorPlacement: function (error, element) {
                        if (element.parent('.input-group').length) {
                            error.insertAfter(element.parent());
                        } else { error.insertAfter(element); }
                    }
                });

            $('#cboGooCal').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
                var selected = $(e.currentTarget).val();
                if (selected == "0" && isSelected==true) { addGooCalendar();}
            });

            $('#myModal').on('hidden.bs.modal', function (e) {
                CancelModal();
            });
            $('#ServiceModal').on('hidden.bs.modal', function (e) {
                CancelServiceModal();
            });
        });

        async function CreateCalendar(p_name) {
            return new Promise(function (resolve, reject) {

                var request = gapi.client.calendar.calendars.insert({ "summary": p_name })
                    .execute(function (resp) {
                    if (typeof resp.error === "undefined") {
                        $("#cboGooCal").append($("<option />").val(resp.id).text(p_name));
                        $("#cboGooCal").selectpicker('refresh');
                        $("#cboGooCal").selectpicker('val',resp.id);
                        resolve(true);

                    }
                    else { reject(resp.error.message); }
                });

            });
        }


        //#region Location
        function saveGeneral() {
            if ($('#formGeneral').valid()) {
                var location={};
                location.id = @Model.Location.Id;
                location.name = $('#inputName').val();
                location.tel = $('#inputTel').val();
                getAPIToken().then((result) => {
                $.ajax({
                    type: "post",
                    data: JSON.stringify(location),
                    url: apiURL+"/api/Location",
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer '+result.AccessToken },
                    dataType: "json",
                    success: function (result) {
                         if (result == "OK") { return true; }
                        else { toastr.error("Napaka:"+result); return false; }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                        return false;
                    }
                });
                });
            } else { return false; }
        }
        //#endregion

        //#region Schedule
        function getUTCDate(p_HHmm) {
            var t= p_HHmm.split(':');
            return new Date(Date.UTC(2020, 00, 01, t[0], t[1]));
        }
        function saveSchedule() {
            if ($('#formSchedule').valid()) {
                var schedule={};
                schedule.id = @Model.Location.Schedule.Id;
                schedule.MondayStart = getUTCDate($('#Mo_from').val());
                schedule.MondayEnd = getUTCDate( $('#Mo_to').val());
                schedule.TuesdayStart = getUTCDate($('#Tu_from').val());
                schedule.TuesdayEnd = getUTCDate( $('#Tu_to').val());
                schedule.WednesdayStart = getUTCDate($('#We_from').val());
                schedule.WednesdayEnd = getUTCDate( $('#We_to').val());
                schedule.ThursdayStart = getUTCDate($('#Th_from').val());
                schedule.ThursdayEnd = getUTCDate( $('#Th_to').val());
                schedule.FridayStart = getUTCDate($('#Fr_from').val());
                schedule.FridayEnd = getUTCDate( $('#Fr_to').val());
                schedule.SaturdayStart = getUTCDate($('#Sa_from').val());
                schedule.SaturdayEnd = getUTCDate( $('#Sa_to').val());
                schedule.SundayStart = getUTCDate($('#Su_from').val());
                schedule.SundayEnd = getUTCDate($('#Su_to').val());
                getAPIToken().then((result) => {
                    $.ajax({
                    type: "post",
                    data: JSON.stringify(schedule),
                    url: apiURL+"/api/schedule/@Model.Location.Schedule.Id",
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                    dataType: "json",
                    success: function (result) {
                         if (result == "OK") { return true; }
                        else { toastr.error("Napaka:"+result); return false; }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                        return false;
                    }
                });
                });
            } else { return false; }
        }
        //#endregion

        //#region Workplaces
         function GetWorkplacesTable() {
             getAPIToken().then((result) => {
            var table = $('#dtWorkplaces').DataTable({
                destroy: true,
                responsive: true,
                'order': [[0, 'desc']],
                //                dom: '<""top"">rt<""bottom""ilp><""container"">',
                searching: false,
                'processing': true,
                'serverSide': true,
                'ajax': {
                    'url': apiURL + "/api/workplacestable/@Model.Location.Id",
                    type: 'POST', dataType: 'json',
                    data: function (dtParms) {
                        return JSON.stringify(dtParms);
                    },
                    'contentType': 'application/json; charset=utf-8',
                    "crossDomain": true,
                    "beforeSend": function (xhr, settings) {
                        getAPIToken().then((result) => {
                            $.ajax($.extend(settings, {
                                headers: { "Authorization": "Bearer " +result.AccessToken },
                                beforeSend: $.noop
                            }));
                        });
                        return false;
                    }

                },
                'columns': [
                    { 'data': 'sortPosition' },
                    { 'data': 'name' },
                    { 'data': 'googleCalendarSummary' },
                    {
                        'data': 'active', className: 'text-center',
                        render: function (data, type, row, meta) {
                            if (row.active == true)
                            { return '<div class="custom-control custom-checkbox"><input type="checkbox" class="custom-control-input" checked="checked"><label class="custom-control-label"></label></div>'; }
                            else
                            { return '<div class="custom-control custom-checkbox"><input type="checkbox" class="custom-control-input" ><label class="custom-control-label"></label></div>'; }
                        }
                    },
                    {
                        data: null, 'orderable': false,
                        render: function (data, type, row, meta) {
                            return '<a class="btn btn-default" onclick="showDetail(' + row.id + ');">Urejanje</a><a class="btn btn-default" onclick="showScheduleForWorkplace(' + row.id + ');">Urnik</a>';
                        }
                    }
                ]
            });
            });

        }

        function CancelModal() {
            $('#formWorkplace').validate().resetForm();
            //remove higlight ( reset form does not do this!)
            $("#formWorkplace input").each(function (key, value) {
                $(this).closest('.form-control').removeClass('is-invalid');
            });
        }



        function cmdAdd_Click() {
            setForm(0);
            $('#cmdDelete').addClass('invisible')
            $("#myModal").modal("show");
            $("#cmdSave").off('click').click(function (evt) {
                if (SaveRecord(0) != false) {
                    $("#myModal").modal("hide");
                    GetWorkplacesTable();
                }
            });


        }

        function setForm(p_ID) {
            if (p_ID == 0) {
                //clear form
                $("#txtPosition").val('');
                $("#txtName").val('');
                $("#cboGooCal").selectpicker('val', '');
                $("#cbActive").prop('checked', true);
            }
            else {
                //fill form
                getAPIToken().then((result) => {
                $.ajax({
                    type: "get",
                    url: apiURL+"/api/workplace/"+p_ID,
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                    dataType: "json",
                    async: true,
                    success: function (result) {
                        $("#txtPosition").val(result.sortPosition);
                        $("#txtName").val(result.name);
                        $("#cboGooCal").selectpicker('val',result.googleCalendarID);
                        $("#cbActive").prop('checked', result.active);
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                    }
                });
                });
            }

        }

        function showDetail(p_ID) {
            setForm(p_ID);
            $('#cmdDelete').removeClass('invisible');
            $("#myModal").modal("show");
            $("#cmdSave").off('click').click(function (evt) {
                if (SaveRecord(p_ID) != false) { $("#myModal").modal("hide"); }
            });
            $("#cmdDelete").off('click').click(function (evt) {
                if (DeleteRecord(p_ID) != false) { $("#myModal").modal("hide"); }
            });

        }

        function DeleteRecord(p_ID) {
            Swal.fire({
                title: 'Zbrišem delovno mesto?',
                showDenyButton: true,
                confirmButtonText: 'Da',
                denyButtonText: 'Ne',
            }).then((result) => {
                if (result.isConfirmed) {
                    getAPIToken().then((result) => {
                    $.ajax({
                        type: "DELETE",
                        url: apiURL + "/api/workplace/" + p_ID,
                        contentType: "application/json; charset=utf-8",
                        headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                        dataType: "json",
                        success: function (result) {
                            if (result == "OK") {toastr.success("Zbrisano");  GetWorkplacesTable(); return true; }
                            else { toastr.error("Napaka:" + result); return false; }
                        },
                        error: function (xhr, status, error) {
                            toastr.error("Napaka:" + error.toString());
                            return false;
                        }
                    });
                    });

                } else { return false; }
            });
        }

        function SaveRecord(p_ID) {
            if ($('#formWorkplace').valid()) {
                var workplace={};
                workplace.id = p_ID;
                workplace.sortPosition = parseInt($('#txtPosition').val());
                if (isNaN(workplace.sortPosition)) { workplace.sortPosition = 0;}
                workplace.name = $('#txtName').val();
                workplace.googleCalendarId = $('#cboGooCal').val();
                workplace.active = $("#cbActive").prop('checked');
                getAPIToken().then((result) => {
                $.ajax({
                    type: "post",
                    data: JSON.stringify(workplace),
                    url: apiURL+"/api/workplace/@Model.Location.Id",
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                    dataType: "json",
                    success: function (result) {
                         if (result == "OK") { GetWorkplacesTable(); return true; }
                        else { toastr.error("Napaka:"+result);  return false; }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                        return false;
                    }
                });
                });
            } else { return false; }
        }


    function addGooCalendar() {
        Swal.fire({
            html: `<div class="form-group">
                Name:
                <p class="">
                    <input id="gooName" class="form-control" type="text" placeholder="Name">
                </p>
            </div>`,
            confirmButtonText: 'Confirm',
            showCancelButton: true,
            preConfirm: function () {
                return new Promise((resolve, reject) => {
                    resolve($('input[placeholder="Name"]').val());
                });
            }
        }).then((data) => {
            if (data.isConfirmed) { CreateCalendar(data.value).catch((result) => { toastr.error(result); }).then(toastr.success("Calendar created")); }
        });
    }

        function showScheduleForWorkplace(p_wpid) {
            //open schedule in new tab
            window.open('@Url.Content("~/wps/")'+p_wpid+"/0", '_blank').focus();
        }
        //#endregion

        //#region Services

        function CancelServiceModal() {
            $('#formService').validate().resetForm();
            //remove higlight ( reset form does not do this!)
            $("#formService input").each(function (key, value) {
                $(this).closest('.form-control').removeClass('is-invalid');
            });
        }

        var GetServicesTable = function () {

            var table = $('#dtServices').DataTable({
                destroy: true,
                responsive: true,
                'order': [[0, 'desc']],
                //                dom: '<""top"">rt<""bottom""ilp><""container"">',
                searching: false,
                'processing': true,
                'serverSide': true,
                'ajax': {
                    'url': apiURL + "/api/servicestable/" + $("#cboLocations").val(),
                    type: 'POST', dataType: 'json',
                    data: function (dtParms) {
                        // I send it as a string to reduce the chance of an error before it reaches the server.
                        return JSON.stringify(dtParms);
                    },
                    'contentType': 'application/json; charset=utf-8',
                    "crossDomain": true,
                    "beforeSend": function (xhr, settings) {
                        getAPIToken().then((result) => {
                            $.ajax($.extend(settings, {
                                headers: { "Authorization": "Bearer " +result.AccessToken },
                                beforeSend: $.noop
                            }));
                        });
                        return false;
                    }

                },
                'columns': [
                    { 'data': 'name' },
                    { 'data': 'minutes' },
                    {
                        'data': 'active', className: 'text-center',
                        render: function (data, type, row, meta) {
                            if (row.active == true)
                            { return '<div class="custom-control custom-checkbox"><input type="checkbox" class="custom-control-input" checked="checked"><label class="custom-control-label"></label></div>'; }
                            else
                            { return '<div class="custom-control custom-checkbox"><input type="checkbox" class="custom-control-input" ><label class="custom-control-label"></label></div>'; }
                        }
                    },
                    {
                        data: null, 'orderable': false,
                        render: function (data, type, row, meta) {
                            return '<a class="btn btn-default" onclick="showServiceDetail(' + row.id + ');">Urejanje</a>';
                        }
                    }
                ]
            });


        }

        function cmdServiceAdd_Click() {
            setServiceForm(0);
            $('#cmdServiceDelete').addClass('invisible')
            $("#ServiceModal").modal("show");
            $("#cmdServiceSave").off('click').click(function (evt) {
                if (SaveService(0) != false) {
                    $("#ServiceModal").modal("hide");
                    GetServicesTable();
                }
            });


        }

        function setServiceForm(p_ID) {
            if (p_ID == 0) {
                //clear form
                $("#txtServiceName").val('');
                $("#txtServiceMinutes").val('');
                $("#cbActive").prop('checked', true);
            }
            else {
                //fill form
                getAPIToken().then((result) => {
                $.ajax({
                    type: "get",
                    url: apiURL+"/api/service/"+p_ID,
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                    dataType: "json",
                    async: true,
                    success: function (result) {
                        $("#txtServiceName").val(result.name);
                        $("#txtServiceMinutes").val(result.minutes);
                        $("#cbActive").prop('checked', result.active);

                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                    }
                });
                });
            }

        }

        function showServiceDetail(p_ID) {
            setServiceForm(p_ID);
            $('#cmdServiceDelete').removeClass('invisible');
            $("#ServiceModal").modal("show");
            $("#cmdServiceSave").off('click').click(function (evt) {
                if (SaveService(p_ID) != false) { $("#ServiceModal").modal("hide"); }
            });
            $("#cmdServiceDelete").off('click').click(function (evt) {
                if (DeleteService(p_ID) != false) { $("#ServiceModal").modal("hide"); }
            });

        }

        function DeleteService(p_ID) {
            Swal.fire({
                title: 'Zbrišem storitev?',
                showDenyButton: true,
                confirmButtonText: 'Da',
                denyButtonText: 'Ne',
            }).then((result) => {
                if (result.isConfirmed) {
                getAPIToken().then((result) => {
                    $.ajax({
                    type: "DELETE",
                    url: apiURL+"/api/service/"+p_ID,
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                    dataType: "json",
                    success: function (result) {
                        if (result == "OK") {toastr.success("storitev zbrisana"); GetServicesTable(); return true; }
                        else { toastr.error("Napaka:" + result); return false; }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                        return false;
                    }
                });
                });

            } else { return false; }
            });

        }

        function SaveService(p_ID) {
            if ($('#formService').valid()) {
                var service={};
                service.id = p_ID;
                service.LocationId = parseInt($("#cboLocations").val());
                service.Name = $('#txtServiceName').val();
                service.Minutes = parseInt($("#txtServiceMinutes").val());
                if (isNaN(service.Minutes)) { service.Minutes = 0;}
                service.Active = $("#cbActive").prop('checked');
                getAPIToken().then((result) => {
                $.ajax({
                    type: "post",
                    data: JSON.stringify(service),
                    url: apiURL+"/api/service/",
                    contentType: "application/json; charset=utf-8",
                    headers: { 'Authorization': 'Bearer ' + result.AccessToken },
                    dataType: "json",
                    success: function (result) {
                         if (result == "OK") { toastr.success("Shranjeno"); GetServicesTable(); return true; }
                        else { toastr.error("Napaka:" + result); return false; }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Napaka:" + error.toString());
                        return false;
                    }
                });
                });
            } else { return false; }
        }

        //#endregion
    </script>
}

