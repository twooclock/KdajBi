@using Newtonsoft.Json;
@using KdajBi.Web.ViewModels;
@inject KdajBi.Web.Services.IApiTokenProvider apiTP
@model vmPublicBooking
@{
    Layout = "~/Views/Shared/_EmptyLayout.cshtml";
    ViewData["Title"] = "Naročanje";
}

@section styles{
    <link href="~/plugins/flatpickr/flatpickr.min.css" rel="stylesheet" />
    <link href="~/plugins/flatpickr/plugins/confirmDate/confirmDate.css" rel="stylesheet" />
    <link href="~/plugins/bs-stepper/css/bs-stepper.min.css" rel="stylesheet" />
 <link rel="preconnect" href="https://rsms.me/">
<link rel="stylesheet" href="https://rsms.me/inter/inter.css">
    <style>
        /* CSS */
        :root {
            font-family: 'Inter', sans-serif;
        }

        @@supports (font-variation-settings: thin) {
            :root {
                font-family: 'Inter var', sans-serif;
            }
        }

        body, #images, #images a {
            font-family: 'Inter var', sans-serif;
        }


        .appointment {
            cursor: pointer;
        }

            .appointment.card:hover {
                background: #007bff22;
            }

        .selektor {
            cursor: pointer;
        }

            .selektor.card:hover {
                color: #28a745;
                border-color: #28a745;
            }

        .card-selected {
        }

        @@media all and (max-width: 768px)
{
    .makswidth { width:-moz-available; }
}
    </style>
    @Html.Raw(@Model.PublicBooking_CSS)
}


<!-- page content -->

<div class="card mt-5 card-book">
    <div class="card-body login-card-body card-body-book">
        @*<h3 class="mb-2 font-weight-bold">Naročanje</h3>*@
        <div class="row">
            <div class="col">
                <h3 class="location-name">@Html.Raw(@Model.Location.Name)</h3>
                @* <h6>@Html.Raw(@Model.CompanyName)</h6> *@
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h6><i class="fas fa-home"></i>&nbsp;@Html.Raw(@Model.Location.Address)</h6>
                <h6><i class="far fa-clock"></i>&nbsp;@Html.Raw(@Model.Location.Timetable)</h6>
                <h6><i class="fas fa-phone"></i>&nbsp;<a href="tel:@Html.Raw(@Model.Location.Tel)">@Html.Raw(@Model.Location.Tel)</a></h6>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 mt-1">
                <div id="stepper2" class="bs-stepper">
                    <div class="bs-stepper-header" role="tablist">
                        <div class="step" data-target="#step-1">
                            <button type="button" class="step-trigger" role="tab" aria-controls="step-1" id="step-1-trigger">
                                <span class="bs-stepper-circle">1</span>
                                <span class="bs-stepper-label">Zaposleni</span>
                                <span id="step-1-selected" class="bs-stepper-label">&nbsp;</span>
                            </button>
                        </div>
                        <div class="line"></div>
                        <div class="step" data-target="#step-2">
                            <button type="button" class="step-trigger" role="tab" aria-controls="step-2" id="step-2-trigger">
                                <span class="bs-stepper-circle">2</span>
                                <span class="bs-stepper-label">Storitev</span>
                                <span id="step-2-selected" class="bs-stepper-label">&nbsp;</span>
                            </button>
                        </div>
                        <div class="line"></div>
                        <div class="step" data-target="#step-3">
                            <button type="button" class="step-trigger" role="tab" aria-controls="step-3" id="step-3-trigger">
                                <span class="bs-stepper-circle">3</span>
                                <span class="bs-stepper-label">Termin</span>
                                <span id="step-3-selected" class="bs-stepper-label">&nbsp;</span>
                            </button>
                        </div>
                    </div>
                    <div class="bs-stepper-content pb-0">
                        <div id="step-1" class="content" role="tabpanel" aria-labelledby="step-1-trigger">
                            <div id="workplaces" class="row">

                            </div>

                        </div>
                        <div id="step-2" class="content" role="tabpanel" aria-labelledby="step-2-trigger">
                            <div id="services" class="">

                            </div>
                            <div id="services-loader" class="card card-outline card-primary p-1" style="display: none">
                                    <div class="card-body text-center">
                                        <div class="spinner-border" role="status">
                                            <span class="sr-only">Nalagam storitve...</span>
                                        </div>
                                    </div>
                                </div>
                        </div>
                        <div id="step-3" class="content" role="tabpanel" aria-labelledby="step-3-trigger">
                            <div class="col" id="appointments">
                                <div class="mb-2 align-center d-flex justify-content-between align-items-center">
                                    <button type="button" class="btn btn-outline-primary" id="previous-day"><</button>
                                    <button type="button" class="btn btn-outline-primary" id="selected-date"></button>
                                    <button type="button" class="btn btn-outline-primary" id="next-day">></button>
                                </div>
                                <div id="no-appointments" class="card card-outline card-primary p-1" style="display: none">
                                    <div class="card-body text-center">
                                        <h4>Ni prostih terminov</h4>
                                        <button type="button" class="btn btn-primary" onclick="loadFreeAppointments(1);">Prikaži prvi prost termin</button>
                                        <div class="pt-5">V primeru, da ne najdete ustreznega termina nas</div>
                                        <a href="tel:@Html.Raw(@Model.Location.Tel)" class="btn btn-primary mt-3"><i class="fas fa-phone"></i>&nbsp;&nbsp;Pokličite</a>
                                    </div>
                                </div>
                                <div id="appointments-loader" class="card card-outline card-primary p-1" style="display: none">
                                    <div class="card-body text-center">
                                        <div class="spinner-border" role="status">
                                            <span class="sr-only">Nalagam proste termine...</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col">
                <h6>@Html.Raw(@Model.PublicBooking_Text)</h6>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="select-appointment" tabindex="-1" aria-labelledby="select-appointment-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="select-appointment-label">Izbran termin</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="font-size: 18px">
                Ali ste prepričani, da se želite naročiti na termin <br /><b><span id="selected-appointment-date"></span> ob <span id="selected-appointment-time"></span></b>?
                @if (Model.PublicBooking_TOS.Length > 0)
                {
                    <text>
                        <div class="d-flex my-4 border border-primary rounded-sm" style="max-height: 40vh;">
                            <div class="flex-grow-1 p-1 overflow-auto">
                                @Html.Raw(@Model.PublicBooking_TOS)
                            </div>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="chkAgreeToTOS" onchange="document.getElementById('create-appointment').disabled = !this.checked;">
                            <label class="form-check-label" for="chkAgreeToTOS">
                                Strinjam se z zgornjimi pogoji 
                            </label>
                        </div>
                    </text>
                }
               
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Zapri</button>
                <button type="button" id="create-appointment" class="btn btn-primary" @if (Model.PublicBooking_TOS.Length > 0){@Html.Raw("disabled='disabled'") } >Naroči se</button>
            </div>
        </div>
    </div>
</div>

<!-- DatePick modal content-->
<div id="myDatePickModal" class="modal fade" data-keyboard="true" tabindex='-1' role="dialog">
    <div class="modal-dialog modal-dialog-centered" style="max-width: fit-content;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">skoči na datum</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body ui-front">
                <form>
                    <div class="form-group">
                        <input type="text" class="form-control" id="datepick" style="visibility: hidden" aria-describedby="emailHelp">
                    </div>
                </form>
            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>
<!-- /modal content-->
@section scripts{
    <script src="~/plugins/flatpickr/flatpickr.min.js"></script>
    <script src="~/plugins/flatpickr/plugins/confirmDate/confirmDate.js"></script>
    <script src="~/plugins/dayjs/dayjs.min.js"></script>
    <script src="~/plugins/dayjs/plugin/utc.js"></script>
    <script>dayjs.extend(window.dayjs_plugin_utc)</script>
    <script src="~/plugins/dayjs/plugin/localizedFormat.js"></script>
    <script>dayjs.extend(window.dayjs_plugin_localizedFormat);</script>
    <script src="~/plugins/dayjs/plugin/localeData.js"></script>
    <script>dayjs.extend(window.dayjs_plugin_localeData)</script>
    <script src="~/plugins/dayjs/plugin/customParseFormat.js"></script>
    <script>dayjs.extend(window.dayjs_plugin_customParseFormat)</script>
    <script src="~/plugins/AlloyFinger/alloy_finger.js"></script>
    <script src="~/plugins/bs-stepper/js/bs-stepper.min.js"></script>

    <script type="text/javascript">
        history.pushState(null, null, location.href);
        window.onpopstate = function () {
            history.go(1);
        };

        var apiURL = "@Html.Raw(apiTP.Settings().BaseAddress)"

        var pbid = "@Html.Raw(@Model.PublicBookingId)";
        var lid = "@Html.Raw(@Model.Location.Id)";
        var wpid = -1;
        var sid = 0;
        var date = new Date();
        @if (@Model.PublicBooking_AllowCurrentDay ==false)
        {
            @Html.Raw("date.setDate(date.getDate() + 1);")
            ;
        }
        var stepper2;
        var pb_maxdays = @Html.Raw(@Model.PublicBooking_MaxDays);
        var minDate = date;
        var maxDate = new Date().fp_incr(pb_maxdays)

        var pb_AuthorizeAfterSlotSelection = @Html.Raw(@Model.PublicBooking_AuthorizeAfterSlotSelection.ToString().ToLower());

        function loadScript(src) {
            return new Promise(function (resolve, reject) {
                const s = document.createElement('script');
                let r = false;
                s.type = 'text/javascript';
                s.src = src;
                s.async = true;
                s.onerror = function (err) {
                    reject(err, s);
                };
                s.onload = s.onreadystatechange = function () {
                    // console.log(this.readyState); // uncomment this line to see which ready states are called.
                    if (!r && (!this.readyState || this.readyState == 'complete')) {
                        r = true;
                        resolve();
                    }
                };
                const t = document.getElementsByTagName('script')[0];
                t.parentElement.insertBefore(s, t);
            });
        }

        function selectService(item)
        {
            $("#step-2-selected").text(item.textContent);
            $('#services .card').each(function () {
                $(this).removeClass('text-success');
                $(this).removeClass('border-success');
            });
            $(item).addClass('text-success');
            $(item).addClass('border-success');
            sid = item.id.split('s_')[1];
            stepper2.next();
        }

        function createService(id, text) {
            
        }

        function createServices(p_items) {
            var gCounter=0;
            var groupName=null;
            var newGroupDiv=null;
            var newRowDiv=null;
            p_items.forEach((element) => {
                if (element.serviceGroup !== null)
                {
                    if (element.serviceGroup.name != groupName)
                    {
                        gCounter++;
                        $('#services').append(newGroupDiv);
                        newGroupDiv = $('<div/>').addClass("row").addClass("collapse").attr({ id: 'gr_' + gCounter });
                        groupName=element.serviceGroup.name;
                        let newP = $('<button>'+groupName+'</button>').addClass("btn btn-primary mb-1 makswidth").attr({ 'data-id': 'gr_' + gCounter }).attr({ style: "margin-left: -0.25rem;min-width: 18rem;margin-bottom: 0;font-weight: bolder;" });
                        newP.click(function () { $('#' + $(this).data('id')).collapse('toggle'); });
                        newRowDiv = $('<div/>').addClass("row");
                        newRowDiv.append(newP);
                        $('#services').append(newRowDiv);
                    }
                }
                else
                {
                    if ( newGroupDiv==null) { newGroupDiv = $('<div/>').addClass("row");}
                }
                      let newDiv = $('<div/>').addClass("card selektor rounded mb-3 m-1 makswidth").attr({ id: 's_' + element.id }).attr({ style: "min-width: 18rem; border-width: 3px;" });
                let lbl = $('<div/>').addClass("card-body");
                let input = $('<h5/>').text(element.name).addClass("card-title");
                let br = $('<br/>');
                let desc = $('<div/>').text(element.priceDescription).attr({ style: "font-size: smaller;" });
                input.append(br).append(desc);
                lbl.append(input);
                newDiv.append(lbl);
                newDiv.click(function () { selectService(this); });
                newGroupDiv.append(newDiv);
                
            });
            if ( newGroupDiv!=null) { $('#services').append(newGroupDiv);}
        }

        function selectWP(item)
        {
            $("#services-loader").show();
            stepper2.next();
            $("#step-1-selected").text(item.textContent);
            $("#step-2-selected").text("");
            $('#workplaces .card').each(function () {
                $(this).removeClass('text-success');
                $(this).removeClass('border-success');
            });
            $(item).addClass('text-success');
            $(item).addClass('border-success');
            wpid = item.id.split('wp_')[1];
            sid = 0;
            //load wp services
            $("#services").empty();
            $.ajax({
                type: "POST",
                url: apiURL + "/api/publicbooking/getservices/" + lid + "/" + wpid,
                contentType: "application/json; charset=utf-8",
                data: "",
                success: function (result) {
                    $("#services-loader").hide();
                    createServices(result);
                },
                error: function (error) {
                    // TODO
                }
            });
        }

        function createWorkplace(id, text) {
            var newDiv = $('<div/>').addClass("card selektor rounded mb-3 m-1").attr({ id: 'wp_' + id })
                .attr({ style: "min-width: 18rem; border-width: 3px;" });
            var lbl = $('<div/>').addClass("card-body");
            var input = $('<h5/>').text(text).addClass("card-title");

            lbl.append(input);
            newDiv.append(lbl);
            newDiv.click(function () { selectWP(this); });
            $('#workplaces').append(newDiv);
        }

        function loadWorkplaces() {
            @if (Model.Location.Workplaces.Count > 1)
            { @Html.Raw("createWorkplace(0, 'Vseeno kdo');"); }
            @foreach (var item in Model.Location.Workplaces)
            {
                @Html.Raw("createWorkplace("+@item.Id.ToString()+",\""+@item.Name+"\");");
            }

        }


    $(document).ready(function () {

        loadWorkplaces();


        stepper2 = new Stepper($('.bs-stepper')[0], {
            linear: false,
            animation: true
        });

        document.getElementById('stepper2').addEventListener('shown.bs-stepper', function (event) {
            if (event.detail.indexStep == 1 && wpid == -1) {
                stepper2.to(1);
                event.preventDefault();
            }
            if (event.detail.indexStep == 2 ) {
                if (wpid == -1 || sid == 0) {
                    if (wpid == -1)
                    { stepper2.to(1); }
                    else
                    { stepper2.to(2); }
                    event.preventDefault();
                }
                loadFreeAppointments();
            }
        })


        loadScript("/plugins/dayjs/locale/" + navigator.language.slice(0, 2) + ".js")
            .then(async function () {
                dayjs.locale(navigator.language.slice(0, 2));
                loadScript("/plugins/flatpickr/l10n/" + navigator.language.slice(0, 2) + ".js")
                    .then(function () {

                        dp = $("#datepick").flatpickr({
                            dateFormat: "d.m.Y",
                            locale: dayjs.locale(),
                            defaultDate: new Date(),
        @if (@Model.PublicBooking_AllowCurrentDay == false )
        {
            @Html.Raw("minDate: new Date().fp_incr(1), ")
            ;
        }
        else
        {
            @Html.Raw("minDate: \'today\', ")
            ;
        }
                            @if (@Model.PublicBooking_MaxDays > 0)
                            {
                                @Html.Raw("maxDate: new Date().fp_incr(pb_maxdays), ");
                            }
                            
                            time_24hr: true, inline: true,
                            onChange: function (selectedDates, dateStr, instance) {
                                console.log(selectedDates);
                                //calendar.gotoDate(selectedDates[0]);
                                date = selectedDates[0];
                                loadFreeAppointments();
                                $("#myDatePickModal").modal("hide");
                            }
                        });
                        var af = new AlloyFinger(document.getElementById('myDatePickModal'), {
                            swipe: function (evt) {
                                switch (evt.direction) {
                                    case "Left": dp.changeMonth(1);
                                        break;
                                    case "Right": dp.changeMonth(-1);
                                        break;
                                }
                            }
                        });
                    });
            });


        $("#previous-day").click(function () {
            changeDate(-1)
        });

        $("#selected-date").click(function () {
            $("#myDatePickModal").modal("show");
        });

        $("#next-day").click(function () {
            changeDate(1)
        });

        $('#select-appointment').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var appointment = button.data('appointment');
            var appwpid = button.data('appointmentwpid');
            var modal = $(this)
            modal.find('#selected-appointment-date').text(formatDate(date));
            modal.find('#selected-appointment-time').text(appointment);
            modal.find('#create-appointment').off();
            modal.find('#create-appointment').on("click", function () {
                $(this).attr("disabled", true);
                
                if (pb_AuthorizeAfterSlotSelection == false) {
                    $(this).html(`<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Naročam...`);
                    $.ajax({
                        type: "POST",
                        url: apiURL + "/api/publicbooking/" + pbid + "/" + appwpid + "/" + sid + "/",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            "date": onlyISODate(date),
                            "timeSlot": appointment
                        }),
                        success: function (result) {
                            window.location.href = "/booked/@Model.token";
                        },
                        error: function (error) {
                            window.location.href = "/book-error?token=@Model.token";
                        }
                    });
                }
                else {
                    //authorize
                    window.location.href = "/bookauth/@Model.token/" + appwpid + "/" + sid + "?date=" + onlyISODate(date) + "&timeslot=" + appointment;
                    
                }
            });
        })

        var dateString = getQueryParameter('date');
        dateFormatRegex = /([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))/;

        if (dateFormatRegex.test(dateString)) {
            date = new Date(dateString);
        }


    });

  function formatDate( date ) {
    var days = [
      'Nedelja',
      'Ponedeljek',
      'Torek',
      'Sreda',
      'Četrtek',
      'Petek',
      'Sobota'
    ];
    var months = [
      'januar',
      'februar',
      'marec',
      'april',
      'maj',
      'junij',
      'julij',
      'avgust',
      'september',
      'oktober',
      'november',
      'december',
    ];

    return days[date.getDay()] + ", " + date.getDate() + ". " + months[date.getMonth()];
        }

        function onlyISODate(p_date) {
            return dayjs(p_date).format("YYYY-MM-DD") ;
        }

        function EnablePrevNext(){
            $("#previous-day").prop("disabled", false);
            $("#next-day").prop("disabled", false);
            @if (@Model.PublicBooking_AllowCurrentDay == false)
            {
                @Html.Raw("if (date <= (dayjs().add(1, 'day')).toDate()) { $('#previous-day').prop('disabled', true); }")
            }
            if (date <= new Date()) { $("#previous-day").prop("disabled", true); }
            @if (@Model.PublicBooking_MaxDays > 0)
            {
                @Html.Raw("if (date >= (dayjs().add(pb_maxdays-1, 'day')).toDate()) { $('#next-day').prop('disabled', true); }")

            }
        }

        function loadFreeAppointments(p_move) {
            $("#selected-date").text(formatDate(date));

            $("#previous-day").prop("disabled", true);
            $("#next-day").prop("disabled", true);

            $(".appointment").remove();
            $("#no-appointments").hide();
            $("#appointments-loader").show();
            if (p_move == null) { p_move = '0'; }
            $.ajax({
                type: "GET",
                url: apiURL + "/api/publicbooking/" + lid + "/" + wpid + "/" + sid + "/?date=" + onlyISODate(date) + '&move=' + p_move + '&mindate=' + onlyISODate(minDate) + '&maxdate=' + onlyISODate(maxDate),
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    $("#appointments-loader").hide();
                    $("#no-appointments").hide();
                    if (result.length === 0) {
                        $("#no-appointments").show();
                        EnablePrevNext();
                        return;
                    }
                    if (result.length > 0) { if (onlyISODate(date) != onlyISODate(new Date(result[0].start))) { date = new Date(result[0].start); $("#selected-date").text(formatDate(date)); } }
                        result.forEach(appointment => {
                            $("#appointments").append(`
              <div
                class="appointment card card-outline card-primary p-1"
                data-toggle="modal"
                data-target="#select-appointment"
                data-appointment="` + formatAppointmentDate(appointment) + `"
                data-appointmentwpid="` + appointment.wpid + `"
              >
                <div class="card-body text-center">
                  <h4>` + formatAppointmentDate(appointment) + `</h4>
                </div>
              </div>
              `);
                    });

                    EnablePrevNext();
                },
                error: function (xhr, status, error) {
                    $("#appointments-loader").hide();
                    $("#no-appointments").show();
                    // TODO: Show error?
                    EnablePrevNext();
                    return false;
                }
            });
        }

  function formatAppointmentDate( appointment ) {
    var start = new Date( appointment.start );
    var end = new Date( appointment.end );

    return start.getHours() + ":"
      + ( start.getMinutes() < 10 ? "0" + start.getMinutes() : start.getMinutes() )
      + " - " + end.getHours() + ":"
      + ( end.getMinutes() < 10 ? "0" + end.getMinutes() : end.getMinutes() );
  }

  function changeDate( noOfDays ) {
    var newDate = new Date( date );
    newDate.setDate( newDate.getDate() + noOfDays );
    var url = new URL( window.location.href );
    url.searchParams.set( "date", onlyISODate( newDate) ); // setting your param
    window.history.pushState( { path: url.href }, '', url.href );
    date = newDate;
    loadFreeAppointments(0);
  }

  function getQueryParameter( name ) {
    var results = new RegExp( '[\?&]' + name + '=([^&#]*)' )
      .exec( window.location.search );

    return ( results !== null ) ? results[1] || 0 : false;
  }
    </script>
}
